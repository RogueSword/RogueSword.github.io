{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"themes/next/source/404.html","path":"404.html","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/love.js","path":"js/src/love.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"7e8f8323a1c5729ab571602755f19c20eadbb411","modified":1535894014869},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1535894014915},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1535894014915},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1535894014918},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1535894014916},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1535894014919},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1535894014918},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1535894014919},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1535894014920},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1535894014920},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1535894014920},{"_id":"themes/next/README.cn.md","hash":"2c766b3369ed477bce134a5450dab45bef161504","modified":1535894014921},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1535894014922},{"_id":"themes/next/README.md","hash":"8ce60ce578963eb4e1eb5e33e1efc2fc4779af9c","modified":1535894014921},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1535894014923},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1535894014963},{"_id":"themes/next/_config.yml","hash":"f6bc7d65f32bfb406ca8cb644395debc8db60e71","modified":1568109756654},{"_id":"source/_posts/2019面试资料整理.md","hash":"354c35ee7890d838c1f9aa709a4da74237510e4c","modified":1568874815659},{"_id":"source/_posts/Frist Page.md","hash":"a906d7ea777809a72563bce9b7516cbfa8997019","modified":1535894014870},{"_id":"source/_posts/commonJS和ES6模块化.md","hash":"b2b21cf86a28f8f5124d07af1a2619276c45cbb9","modified":1535894125795},{"_id":"source/_posts/git日常命令.md","hash":"91dc6e7d85f0d99915489c132486803812103575","modified":1535894014871},{"_id":"source/_posts/读书笔记《你不知道的Javascript》(上).md","hash":"9c63963ad25536e1242e650e5caefc10de02117e","modified":1535894014871},{"_id":"source/about/index.md","hash":"727d7d15bff323033e4fd231b44733f0cd63d04e","modified":1535894014872},{"_id":"source/archives/index.md","hash":"031a05e8ef57be61f850706b64da445299bb83e1","modified":1535894014872},{"_id":"source/categories/index.md","hash":"01792a83c59a1ed085dd22194bde2886ff757bd2","modified":1535894014873},{"_id":"source/tags/index.md","hash":"325b09a6d134ea66da3f87ffe58feb22a7fdc1c5","modified":1535894014874},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1535894014917},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"50d48c47162817a3810a9d9ad51104e83947419a","modified":1535894014917},{"_id":"source/photo/index.md","hash":"a0a054b883977b286c8fa43f4191faa99fdf1094","modified":1568101750632},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1535894014917},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1535894014918},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1535894014924},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1535894014924},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1535894014924},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1535894014925},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1535894014925},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1535894014926},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1535894014925},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1535894014926},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1535894014927},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1535894014927},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1535894014928},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1535894014928},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1535894014928},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1535894014929},{"_id":"themes/next/languages/zh-Hans.yml","hash":"72ce9e10b8e4b6b3c15aa4f0c4391217b28fab74","modified":1568101715750},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1535894014929},{"_id":"themes/next/layout/.DS_Store","hash":"debfb81f96c918d920c45acae876f3e511e2d177","modified":1568102457126},{"_id":"themes/next/layout/_layout.swig","hash":"ca293ff8ab7986bd6824738a50124688ce06a09e","modified":1535894014931},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1535894014960},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1535894014960},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1535894014961},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1535894014961},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1535894014961},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1535894014962},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1535894014962},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1535894014963},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1535894014964},{"_id":"themes/next/source/404.html","hash":"d6cd47ba4ab178269d9e7be773e521a3f74a738b","modified":1535894014969},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1535894015076},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1535894015076},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1535894015077},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535894015018},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1535894014930},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1535894014931},{"_id":"themes/next/layout/_macro/my-copyright.swig","hash":"7e3aff8528e8b4fdcdce354cd0f68a46f2a44f9c","modified":1535894014932},{"_id":"themes/next/layout/_macro/passage-end-tag.swig","hash":"82e840716e8468771c694ffbca73a39ce0f41325","modified":1535894014932},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1535894014933},{"_id":"themes/next/layout/_macro/reward.swig","hash":"f63487a8a26be3fc7307fab54394c5a1f58a9a12","modified":1568107330569},{"_id":"themes/next/layout/_macro/post.swig","hash":"113b8ea4babc97e189e8adf5d683371674f90285","modified":1535894014933},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1535894014934},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1535894014935},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1535894014934},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c3c7d20af2476c90da798fa038f209bc1959ab32","modified":1568109560357},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1535894014938},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1535894014937},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1535894014938},{"_id":"themes/next/layout/_partials/head.swig","hash":"5818078253e7b63933a94a7cba9f2be219b4a929","modified":1535894014936},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1535894014938},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1535894014942},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1535894014943},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1535894014946},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1535894014955},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1535894014955},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1535894014956},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1535894014955},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1535894014956},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1535894014957},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1535894014956},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1535894014965},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1535894014966},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1535894014966},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1535894014966},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1535894014967},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1535894014967},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1535894014968},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1535894014968},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1535894014968},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1535894015018},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1535894015019},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1535894015019},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1535894015019},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1535894015025},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1535894015025},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1535894015031},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1535894015031},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1535894015032},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1535894015031},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1535894015033},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1535894015033},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1535894015032},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1535894015033},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1535894015033},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1535894015033},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1535894015032},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1535894015034},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1535894015034},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535894014945},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535894014945},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535894015007},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535894015007},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535894015007},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535894015017},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535894015018},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1535894014937},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1535894014937},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1535894014939},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1535894014940},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1535894014941},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1535894014941},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1535894014940},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1535894014941},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1535894014944},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1535894014942},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1535894014943},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1535894014947},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1535894014948},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1535894014945},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1535894014947},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1535894014948},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1535894014949},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"4aa55cd424389cf5626aa019c15ef6f3e4da09f2","modified":1568109560343},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1535894014949},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1535894014949},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1535894014950},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1535894014950},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1535894014951},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1535894014951},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1535894014951},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1535894014952},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1535894014952},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1535894014953},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1535894014953},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1535894014953},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1535894014953},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1535894014954},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1535894014954},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1535894014954},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1535894014959},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1535894014959},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1535894014959},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1535894014960},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"eef3011a8f5f602dc1bb574b48fcd91c6918c3f2","modified":1535894015006},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1535894015007},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1535894015007},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1535894015007},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1535894015017},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1535894015017},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1535894015018},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1535894015018},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1535894015035},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1535894015035},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1535894015034},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1535894015035},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1535894015035},{"_id":"themes/next/source/js/src/love.js","hash":"4e2589bafd513dda998cbf7601433c1732cc77e5","modified":1535894015036},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1535894015036},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1535894015036},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1535894015037},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1535894015037},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1535894015037},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1535894015037},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1535894015044},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1535894015041},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1535894015044},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1535894015051},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1535894015051},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1535894015052},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1535894015052},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1535894015053},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1535894015053},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1535894015054},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1535894015054},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1535894015054},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1535894015061},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1535894015063},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1535894015063},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1535894015063},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1535894015064},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1535894015063},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1535894015064},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1535894015065},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1535894015065},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1535894015064},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1535894015066},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1535894015066},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1535894015065},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1535894015066},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1535894015066},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1535894015066},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1535894015067},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1535894015067},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1535894015067},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1535894015067},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1535894015068},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1535894015068},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1535894015068},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1535894015069},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1535894015069},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1535894015069},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1535894015070},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1535894015074},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1535894015074},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1535894015075},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1535894015076},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1535894015076},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1535894015062},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1535894014970},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1535894014958},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1535894014958},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1535894014970},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1535894014971},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1535894014971},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1535894014971},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1535894014989},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1535894014998},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1535894015003},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1535894015003},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1535894015004},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1535894015004},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1535894015006},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1535894015006},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1535894015005},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1535894015008},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1535894015009},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1535894015009},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1535894015009},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1535894015009},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1535894015009},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1535894015010},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1535894015010},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1535894015011},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1535894015011},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1535894015011},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1535894015011},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1535894015012},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1535894015014},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1535894015014},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1535894015013},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1535894015014},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1535894015016},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1535894015015},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1535894015037},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1535894015040},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1535894015041},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1535894015045},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1535894015046},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1535894015046},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1535894015046},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1535894015046},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1535894015047},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1535894015049},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1535894015050},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1535894015050},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1535894015053},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1535894015052},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1535894015055},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1535894015054},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1535894015055},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1535894015073},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1535894015073},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1535894015039},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1535894015060},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1535894015061},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1535894015040},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1535894014972},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1535894014973},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1535894014972},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1535894014973},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1535894014974},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1535894014974},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1535894014975},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1535894014975},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1535894014982},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1535894014975},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1535894014976},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1535894014988},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1535894014988},{"_id":"themes/next/source/css/_common/components/post/my-post-copyright.styl","hash":"d517a158f6368a12028e62ce49ab52bdb823ffe4","modified":1535894014990},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1535894014989},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"d12e6d4a4cc123b66c273c63a96db83d6cb2de29","modified":1535894014990},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1535894014990},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1535894014991},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1535894014991},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1535894014991},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1535894014992},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1535894014992},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1535894014993},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1535894014993},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"a42b660c6e5caa6b95095e245c63d65a680b7010","modified":1568109142764},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1535894014994},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1535894014994},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1535894014994},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"062c053c961a99fbad0aab32368eedbd930854d0","modified":1535894014995},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1535894014996},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"aea25a0b2ea708b780eff2ef910855203cebf44a","modified":1535894014996},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1535894014996},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1535894014997},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1535894014997},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1535894014997},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1535894014997},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1535894014997},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1535894014998},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1535894014998},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1535894014998},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1535894014999},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1535894014999},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1535894014999},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1535894014999},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1535894015000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1535894014999},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1535894015000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1535894015000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1535894015001},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1535894015000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1535894015001},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1535894015001},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1535894015001},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1535894015002},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1535894015002},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1535894015002},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1535894015002},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1535894015001},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1535894015010},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1535894015010},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1535894015012},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1535894015038},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1535894015038},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1535894015038},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1535894015039},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1535894015039},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1535894015047},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1535894015048},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1535894015047},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1535894015048},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1535894015049},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1535894015048},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1535894015056},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1535894015057},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1535894015075},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1535894015060},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1535894015044},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1535894015072},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1535894015059}],"Category":[{"name":"hexo","_id":"ck0qbmhfl0006uyfypvrayqxq"}],"Data":[],"Page":[{"title":"About Roy","date":"2018-05-18T16:41:49.000Z","type":"about","_content":"\n<div class=\"post-content\">\n  <p><i class=\"fa fa-user\"></i> Nickname: <a href=\"https://yuelei.top\" target=\"_blank\" rel=\"noopener\">RogueSword</a></p><p><i class=\"fa fa-envelope\"></i> Email: <a href=\"mailto:yuelei8@foxmail.com\" target=\"_blank\" rel=\"noopener\">yuelei8@foxmail.com</a></p><p><i class=\"fa fa-github\"></i> Github: <a href=\"https://github.com/RogueSword\" target=\"_blank\" rel=\"noopener\">@RogueSword</a></p>\n</div>","source":"about/index.md","raw":"---\ntitle: About Roy\ndate: 2018-05-19 00:41:49\ntype: \"about\"\n---\n\n<div class=\"post-content\">\n  <p><i class=\"fa fa-user\"></i> Nickname: <a href=\"https://yuelei.top\" target=\"_blank\" rel=\"noopener\">RogueSword</a></p><p><i class=\"fa fa-envelope\"></i> Email: <a href=\"mailto:yuelei8@foxmail.com\" target=\"_blank\" rel=\"noopener\">yuelei8@foxmail.com</a></p><p><i class=\"fa fa-github\"></i> Github: <a href=\"https://github.com/RogueSword\" target=\"_blank\" rel=\"noopener\">@RogueSword</a></p>\n</div>","updated":"2018-09-02T13:13:34.872Z","path":"about/index.html","comments":1,"layout":"page","_id":"ck0qbmhdz0001uyfy17cn6lzq","content":"<div class=\"post-content\"><br>  <p><i class=\"fa fa-user\"></i> Nickname: <a href=\"https://yuelei.top\" target=\"_blank\" rel=\"noopener\">RogueSword</a></p><p><i class=\"fa fa-envelope\"></i> Email: <a href=\"mailto:yuelei8@foxmail.com\" target=\"_blank\" rel=\"noopener\">yuelei8@foxmail.com</a></p><p><i class=\"fa fa-github\"></i> Github: <a href=\"https://github.com/RogueSword\" target=\"_blank\" rel=\"noopener\">@RogueSword</a></p><br></div>","site":{"data":{}},"excerpt":"","more":"<div class=\"post-content\"><br>  <p><i class=\"fa fa-user\"></i> Nickname: <a href=\"https://yuelei.top\" target=\"_blank\" rel=\"noopener\">RogueSword</a></p><p><i class=\"fa fa-envelope\"></i> Email: <a href=\"mailto:yuelei8@foxmail.com\" target=\"_blank\" rel=\"noopener\">yuelei8@foxmail.com</a></p><p><i class=\"fa fa-github\"></i> Github: <a href=\"https://github.com/RogueSword\" target=\"_blank\" rel=\"noopener\">@RogueSword</a></p><br></div>"},{"title":"","date":"2018-05-18T16:12:00.000Z","type":"archives","comments":0,"_content":"","source":"archives/index.md","raw":"---\ntitle: \ndate: 2018-05-19 00:12:00\ntype: \"archives\"\ncomments: false\n---\n","updated":"2018-09-02T13:13:34.872Z","path":"archives/index.html","layout":"page","_id":"ck0qbmhfh0003uyfyniexh8ye","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2018-08-25T08:05:47.000Z","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-08-25 16:05:47\ncomments: false\n---\n","updated":"2018-09-02T13:13:34.873Z","path":"categories/index.html","layout":"page","_id":"ck0qbmhfj0005uyfyljq31tg4","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"","date":"2018-05-18T16:12:00.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: \ndate: 2018-05-19 00:12:00\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-09-02T13:13:34.874Z","path":"tags/index.html","layout":"page","_id":"ck0qbmhwl000iuyfyll5u2n1c","content":"","site":{"data":{}},"excerpt":"","more":""},{"date":"2018-05-18T14:14:07.000Z","type":"photo","comments":1,"_content":"<div id= \"photo\" >\nMy instagram\n**所有图片转载需要经过本人同意**\n\n\n</div> ","source":"photo/index.md","raw":"---\ndate: 2018-05-18 22:14:07\ntype: \"photo\"\ncomments: true\n---\n<div id= \"photo\" >\nMy instagram\n**所有图片转载需要经过本人同意**\n\n\n</div> ","updated":"2019-09-10T07:49:10.632Z","path":"photo/index.html","title":"","layout":"page","_id":"ck0qbmhwv000juyfyiair1ubf","content":"<div id=\"photo\"><br>My instagram<br><strong>所有图片转载需要经过本人同意</strong><br><br><br></div> ","site":{"data":{}},"excerpt":"","more":"<div id=\"photo\"><br>My instagram<br><strong>所有图片转载需要经过本人同意</strong><br><br><br></div> "}],"Post":[{"title":"2019面试资料整理","copyright":true,"date":"2019-09-19T06:31:50.000Z","comments":1,"password":null,"_content":"\n### 综合\n- [五分钟面试](https://mp.weixin.qq.com/s/TpoKxF4gMi4pSML--W0X2g)\n- [学习路线以及方向的总结](https://mp.weixin.qq.com/s/PDMt08JJCzJtHC9bRBPg4w)\n\n\n### js\n- [关于隐式转换](https://segmentfault.com/a/1190000008594792)\n- [宏任务与微任务](https://github.com/gauseen/blog/issues/6)\n\n### vue\n- [vue生命周期](https://blog.csdn.net/mqingo/article/details/86031260)\n- [Vue 面试中常问知识点整理](https://blog.csdn.net/sinat_17775997/article/details/82756496)\n- [面试必备的13道可以举一反三的Vue面试题](https://juejin.im/post/5d41eec26fb9a06ae439d29f?)\n- [「从源码中学习」面试官都不知道的Vue题目答案](https://mp.weixin.qq.com/s/w4onfmE5FWc2zqP6mtYc3g)\n- [30 道 Vue 面试题，内含详细讲解（涵盖入门到精通，自测 Vue 掌握程度）](https://juejin.im/post/5d59f2a451882549be53b170?utm_source=gold_browser_extension#heading-2)\n- [Vue.js最佳实践（五招让你成为Vue.js大师](https://mp.weixin.qq.com/s/cVYtYWOB2mie-bjZmSw9AQ)\n- [vm.$attrs 【Vue 2.4.0新增inheritAttrs，attrs详解】](https://www.jianshu.com/p/ce8ca875c337)\n- [面试官：你了解 vue 的diff算法吗？](https://juejin.im/post/5ad6182df265da23906c8627)\n- [Vuejs建议和最佳实践](https://juejin.im/post/5d48f3b7e51d4561e224a2c8?utm_source=gold_browser_extension)\n\n### webpack 配置\n- [eslint 配置](https://www.jianshu.com/p/bfc7e7329cff)\n- [webpack中对于输出文件名可以有三种hash值](https://www.cnblogs.com/giggle/p/9583940.html)\n\n### http\n- [HTTP协议【详解】——经典面试题](https://www.cnblogs.com/sunny-sl/p/6529830.html)\n\n### 针对同样的路由，携带了动态参数， /path/a   /path/b，解决不刷新的问题\n- watch中观察$route, handler为请求的方法名，immediate 设置为 true\n- beforeRouteUpdate 路由守卫解决\n- 在 router-view里面新增\n```\n<router-view :key=\"$route.fullpath\"></router-view>\n```\n","source":"_posts/2019面试资料整理.md","raw":"---\ntitle: 2019面试资料整理\ncopyright: true\ndate: 2019-09-19 14:31:50\ntags:\ncategories:\ncomments:\npassword:\n---\n\n### 综合\n- [五分钟面试](https://mp.weixin.qq.com/s/TpoKxF4gMi4pSML--W0X2g)\n- [学习路线以及方向的总结](https://mp.weixin.qq.com/s/PDMt08JJCzJtHC9bRBPg4w)\n\n\n### js\n- [关于隐式转换](https://segmentfault.com/a/1190000008594792)\n- [宏任务与微任务](https://github.com/gauseen/blog/issues/6)\n\n### vue\n- [vue生命周期](https://blog.csdn.net/mqingo/article/details/86031260)\n- [Vue 面试中常问知识点整理](https://blog.csdn.net/sinat_17775997/article/details/82756496)\n- [面试必备的13道可以举一反三的Vue面试题](https://juejin.im/post/5d41eec26fb9a06ae439d29f?)\n- [「从源码中学习」面试官都不知道的Vue题目答案](https://mp.weixin.qq.com/s/w4onfmE5FWc2zqP6mtYc3g)\n- [30 道 Vue 面试题，内含详细讲解（涵盖入门到精通，自测 Vue 掌握程度）](https://juejin.im/post/5d59f2a451882549be53b170?utm_source=gold_browser_extension#heading-2)\n- [Vue.js最佳实践（五招让你成为Vue.js大师](https://mp.weixin.qq.com/s/cVYtYWOB2mie-bjZmSw9AQ)\n- [vm.$attrs 【Vue 2.4.0新增inheritAttrs，attrs详解】](https://www.jianshu.com/p/ce8ca875c337)\n- [面试官：你了解 vue 的diff算法吗？](https://juejin.im/post/5ad6182df265da23906c8627)\n- [Vuejs建议和最佳实践](https://juejin.im/post/5d48f3b7e51d4561e224a2c8?utm_source=gold_browser_extension)\n\n### webpack 配置\n- [eslint 配置](https://www.jianshu.com/p/bfc7e7329cff)\n- [webpack中对于输出文件名可以有三种hash值](https://www.cnblogs.com/giggle/p/9583940.html)\n\n### http\n- [HTTP协议【详解】——经典面试题](https://www.cnblogs.com/sunny-sl/p/6529830.html)\n\n### 针对同样的路由，携带了动态参数， /path/a   /path/b，解决不刷新的问题\n- watch中观察$route, handler为请求的方法名，immediate 设置为 true\n- beforeRouteUpdate 路由守卫解决\n- 在 router-view里面新增\n```\n<router-view :key=\"$route.fullpath\"></router-view>\n```\n","slug":"2019面试资料整理","published":1,"updated":"2019-09-19T06:33:35.659Z","layout":"post","photos":[],"link":"","_id":"ck0qbmhdv0000uyfyd7f0elqc","content":"<h3 id=\"综合\"><a href=\"#综合\" class=\"headerlink\" title=\"综合\"></a>综合</h3><ul>\n<li><a href=\"https://mp.weixin.qq.com/s/TpoKxF4gMi4pSML--W0X2g\" target=\"_blank\" rel=\"noopener\">五分钟面试</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s/PDMt08JJCzJtHC9bRBPg4w\" target=\"_blank\" rel=\"noopener\">学习路线以及方向的总结</a></li>\n</ul>\n<h3 id=\"js\"><a href=\"#js\" class=\"headerlink\" title=\"js\"></a>js</h3><ul>\n<li><a href=\"https://segmentfault.com/a/1190000008594792\" target=\"_blank\" rel=\"noopener\">关于隐式转换</a></li>\n<li><a href=\"https://github.com/gauseen/blog/issues/6\" target=\"_blank\" rel=\"noopener\">宏任务与微任务</a></li>\n</ul>\n<h3 id=\"vue\"><a href=\"#vue\" class=\"headerlink\" title=\"vue\"></a>vue</h3><ul>\n<li><a href=\"https://blog.csdn.net/mqingo/article/details/86031260\" target=\"_blank\" rel=\"noopener\">vue生命周期</a></li>\n<li><a href=\"https://blog.csdn.net/sinat_17775997/article/details/82756496\" target=\"_blank\" rel=\"noopener\">Vue 面试中常问知识点整理</a></li>\n<li><a href=\"https://juejin.im/post/5d41eec26fb9a06ae439d29f?\" target=\"_blank\" rel=\"noopener\">面试必备的13道可以举一反三的Vue面试题</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s/w4onfmE5FWc2zqP6mtYc3g\" target=\"_blank\" rel=\"noopener\">「从源码中学习」面试官都不知道的Vue题目答案</a></li>\n<li><a href=\"https://juejin.im/post/5d59f2a451882549be53b170?utm_source=gold_browser_extension#heading-2\" target=\"_blank\" rel=\"noopener\">30 道 Vue 面试题，内含详细讲解（涵盖入门到精通，自测 Vue 掌握程度）</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s/cVYtYWOB2mie-bjZmSw9AQ\" target=\"_blank\" rel=\"noopener\">Vue.js最佳实践（五招让你成为Vue.js大师</a></li>\n<li><a href=\"https://www.jianshu.com/p/ce8ca875c337\" target=\"_blank\" rel=\"noopener\">vm.$attrs 【Vue 2.4.0新增inheritAttrs，attrs详解】</a></li>\n<li><a href=\"https://juejin.im/post/5ad6182df265da23906c8627\" target=\"_blank\" rel=\"noopener\">面试官：你了解 vue 的diff算法吗？</a></li>\n<li><a href=\"https://juejin.im/post/5d48f3b7e51d4561e224a2c8?utm_source=gold_browser_extension\" target=\"_blank\" rel=\"noopener\">Vuejs建议和最佳实践</a></li>\n</ul>\n<h3 id=\"webpack-配置\"><a href=\"#webpack-配置\" class=\"headerlink\" title=\"webpack 配置\"></a>webpack 配置</h3><ul>\n<li><a href=\"https://www.jianshu.com/p/bfc7e7329cff\" target=\"_blank\" rel=\"noopener\">eslint 配置</a></li>\n<li><a href=\"https://www.cnblogs.com/giggle/p/9583940.html\" target=\"_blank\" rel=\"noopener\">webpack中对于输出文件名可以有三种hash值</a></li>\n</ul>\n<h3 id=\"http\"><a href=\"#http\" class=\"headerlink\" title=\"http\"></a>http</h3><ul>\n<li><a href=\"https://www.cnblogs.com/sunny-sl/p/6529830.html\" target=\"_blank\" rel=\"noopener\">HTTP协议【详解】——经典面试题</a></li>\n</ul>\n<h3 id=\"针对同样的路由，携带了动态参数，-path-a-path-b，解决不刷新的问题\"><a href=\"#针对同样的路由，携带了动态参数，-path-a-path-b，解决不刷新的问题\" class=\"headerlink\" title=\"针对同样的路由，携带了动态参数， /path/a   /path/b，解决不刷新的问题\"></a>针对同样的路由，携带了动态参数， /path/a   /path/b，解决不刷新的问题</h3><ul>\n<li>watch中观察$route, handler为请求的方法名，immediate 设置为 true</li>\n<li>beforeRouteUpdate 路由守卫解决</li>\n<li>在 router-view里面新增<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;router-view :key=&quot;$route.fullpath&quot;&gt;&lt;/router-view&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"综合\"><a href=\"#综合\" class=\"headerlink\" title=\"综合\"></a>综合</h3><ul>\n<li><a href=\"https://mp.weixin.qq.com/s/TpoKxF4gMi4pSML--W0X2g\" target=\"_blank\" rel=\"noopener\">五分钟面试</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s/PDMt08JJCzJtHC9bRBPg4w\" target=\"_blank\" rel=\"noopener\">学习路线以及方向的总结</a></li>\n</ul>\n<h3 id=\"js\"><a href=\"#js\" class=\"headerlink\" title=\"js\"></a>js</h3><ul>\n<li><a href=\"https://segmentfault.com/a/1190000008594792\" target=\"_blank\" rel=\"noopener\">关于隐式转换</a></li>\n<li><a href=\"https://github.com/gauseen/blog/issues/6\" target=\"_blank\" rel=\"noopener\">宏任务与微任务</a></li>\n</ul>\n<h3 id=\"vue\"><a href=\"#vue\" class=\"headerlink\" title=\"vue\"></a>vue</h3><ul>\n<li><a href=\"https://blog.csdn.net/mqingo/article/details/86031260\" target=\"_blank\" rel=\"noopener\">vue生命周期</a></li>\n<li><a href=\"https://blog.csdn.net/sinat_17775997/article/details/82756496\" target=\"_blank\" rel=\"noopener\">Vue 面试中常问知识点整理</a></li>\n<li><a href=\"https://juejin.im/post/5d41eec26fb9a06ae439d29f?\" target=\"_blank\" rel=\"noopener\">面试必备的13道可以举一反三的Vue面试题</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s/w4onfmE5FWc2zqP6mtYc3g\" target=\"_blank\" rel=\"noopener\">「从源码中学习」面试官都不知道的Vue题目答案</a></li>\n<li><a href=\"https://juejin.im/post/5d59f2a451882549be53b170?utm_source=gold_browser_extension#heading-2\" target=\"_blank\" rel=\"noopener\">30 道 Vue 面试题，内含详细讲解（涵盖入门到精通，自测 Vue 掌握程度）</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s/cVYtYWOB2mie-bjZmSw9AQ\" target=\"_blank\" rel=\"noopener\">Vue.js最佳实践（五招让你成为Vue.js大师</a></li>\n<li><a href=\"https://www.jianshu.com/p/ce8ca875c337\" target=\"_blank\" rel=\"noopener\">vm.$attrs 【Vue 2.4.0新增inheritAttrs，attrs详解】</a></li>\n<li><a href=\"https://juejin.im/post/5ad6182df265da23906c8627\" target=\"_blank\" rel=\"noopener\">面试官：你了解 vue 的diff算法吗？</a></li>\n<li><a href=\"https://juejin.im/post/5d48f3b7e51d4561e224a2c8?utm_source=gold_browser_extension\" target=\"_blank\" rel=\"noopener\">Vuejs建议和最佳实践</a></li>\n</ul>\n<h3 id=\"webpack-配置\"><a href=\"#webpack-配置\" class=\"headerlink\" title=\"webpack 配置\"></a>webpack 配置</h3><ul>\n<li><a href=\"https://www.jianshu.com/p/bfc7e7329cff\" target=\"_blank\" rel=\"noopener\">eslint 配置</a></li>\n<li><a href=\"https://www.cnblogs.com/giggle/p/9583940.html\" target=\"_blank\" rel=\"noopener\">webpack中对于输出文件名可以有三种hash值</a></li>\n</ul>\n<h3 id=\"http\"><a href=\"#http\" class=\"headerlink\" title=\"http\"></a>http</h3><ul>\n<li><a href=\"https://www.cnblogs.com/sunny-sl/p/6529830.html\" target=\"_blank\" rel=\"noopener\">HTTP协议【详解】——经典面试题</a></li>\n</ul>\n<h3 id=\"针对同样的路由，携带了动态参数，-path-a-path-b，解决不刷新的问题\"><a href=\"#针对同样的路由，携带了动态参数，-path-a-path-b，解决不刷新的问题\" class=\"headerlink\" title=\"针对同样的路由，携带了动态参数， /path/a   /path/b，解决不刷新的问题\"></a>针对同样的路由，携带了动态参数， /path/a   /path/b，解决不刷新的问题</h3><ul>\n<li>watch中观察$route, handler为请求的方法名，immediate 设置为 true</li>\n<li>beforeRouteUpdate 路由守卫解决</li>\n<li>在 router-view里面新增<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;router-view :key=&quot;$route.fullpath&quot;&gt;&lt;/router-view&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"Frist Page","copyright":true,"date":"2018-05-18T09:14:06.000Z","comments":1,"password":null,"_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\nmore\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/Frist Page.md","raw":"\n---\ntitle: Frist Page\ncopyright: true\ndate: 2018-05-18 17:14:06\ntags: [hexo]\ncategories: [hexo]\ncomments: true\npassword: \n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\nmore\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"Frist Page","published":1,"updated":"2018-09-02T13:13:34.870Z","layout":"post","photos":[],"link":"","_id":"ck0qbmhfe0002uyfy11nj8r99","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<p>more</p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<p>more</p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"commonJS和ES6模块化","copyright":true,"date":"2018-08-30T07:24:33.000Z","comments":1,"password":null,"_content":"> \b随js语言持续优化，为我们的开发带来较大的便利性。但是在使用node和es6的模块化功能时候，两者的使用方式还是有点区别。在这里做一小结，\b以便日后查阅\n\n## \b基本的使用规范\n### CommonJS\n- \b主要是Node.js的使用规范，\n- 每一个js都是一个独立的模块，并且里面的变量名称互不冲突。使用规则为一个模块向外导出变量，另一个模块导入变量\n- 语法\n  1. 导出的模块：module.exports = '变量名'\n  2. 导入的模块：var newName = require('./\b导出模块的路径');\n- 注意使用事项：由于导出的写法不同，因此导入后的使用方式也不通具体如下\n```js\n<!-- 写法一 -->\n// export.js\nvar a = 'Shen Zhen';\nfunction greet(name) {\n  console.log(`welcome ${name}, ${a}`);\n}\nmodule.exports = greet;\n\n// import.js\nvar a = 'Roy';\nvar method = require('./export.js');\nmethod(a);  // 直接将引入的方法调用\n\n<!-- 写法2 -->\n// export.js\n\bmodule.exports = {\n  greet: greet\n}\n\n// import.js\nvar obj = require('./export.js');   // 此时引入的是个对象，因此需要对对象的调用\nobj.greet(a);\n\n<!-- 写法3：不推荐，容易混淆 -->\n// export.js\nexports.greet = greet;\n\n// import.js\nvar obj = require('./export.js');   // 此时引入的是个对象，因此需要对对象的调用\nobj.greet(a);\n```\n\n> 注意：在写法2和3中，我们可以看到，两者\b导出的均为一个对象。实际上在node中，module.exports和exports是同一个变量，并且初始化为一个空对象{}。在这个空对象中，可以存放键值对形式的方法。**但是如果要导出的是数组或者函数，则必须使用module.exports**，实际上，记住一点即可，使用module.exports总是不会错的！\n\n- 其他：对于引用node的一些内置模块时，可以直接引用其模块名称\n```js\nconst http = require('http');\nhttp.createServer((request, response) => {\n\n}).listen('8080')\n```\n\n### ES6模块化\n- 常见的几种写法\n  1. 直接export导出。es6将其视为一个模块,export分别对外将变量导出\n  ```js\n  // export.js\n  // 也可以写做连续声明变量的形式，去掉第二个export字段，在第一个最后写上','\n  export var name = 'Roy';\n  export function getName(name) {\n    console.log(name);\n  }\n\n  // import.js\n  import {name, getName} from './export.js'\n  getName();\n  ```\n  2. 先正常定义，后导出。推荐此方法，清晰明了\n  ```js\n  // export.js\n  const name = 'Roy';\n  let getName = function (name) {\n    console.log(name);\n  }\n\n  // import.js\n  export {name, getName}; \n  getName();\n  ```\n  3. export导出时候，可以将导出的变量重命名后再导出\n  ```js\n  // export.js\n  const name = 'Roy';\n  let getName = function() {\n    console.log(name);\n  }\n  export {\n    name as nn,\n    getName as get\n  }\n  ```\n\n  4. import导入的时候，可以将导入的变量重命名 \n  ```js\n  // import.js\n  // 注意导入的\b模块名必须和导出时写的变量名一致，同时导入后的模块只读，只能使用，不可再做修改重定义。但是，当且\b导出的是个对象，\b导入的js里面可以修改对象的属性，同时也改变了原始处的值。不推荐使用\n  // 导入时候地址可以相对路径，也可以绝对路径，\n  // 导入时.js后缀可以省略\n  import {getName as getMethod} from './export.js'\n  ```\n\n  5. 设置模块中转站js，匿名转载他处的变量。export2中仅作为中转站，\b在它里面是无法使用export1.js导出的变量\n  ```js\n  // \bexport1.js\n  export let name = 'name', getName = function() {};\n\n  // export2.js\n  export * from './export1.js'  // export {name, getName} from './export1.js'\n\n  // import.js\n  import {name, getName} from './export2.js'\n  console.log(name);\n  console.log(getName());\n  ```\n\n  6. 终极简化1 -> \b\bimport整体引入,用*替代具体的变量名，同时将其重命名。export *命令会忽略export模块的default方法\n  ```js\n  // export.js\n  export var name = 'Roy', function getName() {};\n\n  // import.js\n  import * as obj from './export.js';\n  obj.name;       // > Roy\n  obj.getName();  // \n  ```\n\n  7. 终极简化2 -> export default xxx后，在import时就无需将导入的变量名与导出的保持一致了，用户可以随意命名。实际上export default就是输出了一个叫做default的变量或者方法,然后系统允许在引入它的时候改写为任何名字\n  ```js\n  // export.js\n  var name = 'Roy';\n  export default name;\n\n  // import.js - 注意此处引入时候无需{}\n  import nnn from './export.js'\n  ```\n\n  8. 小结：导出普通变量和函数的小结。注意接口名和内不变量之间要有一一对应关系\n  ```js\n  // \b普通变量 - 1\n  export var m = 1;\n  // 普通变量 - 2\n  var m = 1;\n  export {m};\n  // 普通变量 - 3\n  var m = 1;\n  export {m as n};\n\n  // 函数 - 1\n  e\bxport function getName() {}\n  // 函数 - 2\n  function getName() {}\n  export {getName}\n  ```\n## \b区别\n- \bCommonJS输出的是一个值的拷贝；ES6输出的是值的引用\n- \bCommonJS是模块运行时加载；ES6是编译时完成模块加载，效率更高\n\n> 参考：\n1. [廖雪峰-js教程](https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/001434502419592fd80bbb0613a42118ccab9435af408fd000)\n2. [js当中CommonJS 和es6的模块化引入方案以及比较](https://blog.csdn.net/jackTesla/article/details/80796936)\n3. [ES6新特性：使用export和import实现模块化](https://www.cnblogs.com/diligenceday/p/5503777.html)\n4. [阮一峰-ES6模块化](http://es6.ruanyifeng.com/#docs/module)","source":"_posts/commonJS和ES6模块化.md","raw":"---\ntitle: commonJS和ES6模块化\ncopyright: true\ndate: 2018-08-30 15:24:33\ntags: ['ES6','模块化']\ncategories: \ncomments:\npassword:\n---\n> \b随js语言持续优化，为我们的开发带来较大的便利性。但是在使用node和es6的模块化功能时候，两者的使用方式还是有点区别。在这里做一小结，\b以便日后查阅\n\n## \b基本的使用规范\n### CommonJS\n- \b主要是Node.js的使用规范，\n- 每一个js都是一个独立的模块，并且里面的变量名称互不冲突。使用规则为一个模块向外导出变量，另一个模块导入变量\n- 语法\n  1. 导出的模块：module.exports = '变量名'\n  2. 导入的模块：var newName = require('./\b导出模块的路径');\n- 注意使用事项：由于导出的写法不同，因此导入后的使用方式也不通具体如下\n```js\n<!-- 写法一 -->\n// export.js\nvar a = 'Shen Zhen';\nfunction greet(name) {\n  console.log(`welcome ${name}, ${a}`);\n}\nmodule.exports = greet;\n\n// import.js\nvar a = 'Roy';\nvar method = require('./export.js');\nmethod(a);  // 直接将引入的方法调用\n\n<!-- 写法2 -->\n// export.js\n\bmodule.exports = {\n  greet: greet\n}\n\n// import.js\nvar obj = require('./export.js');   // 此时引入的是个对象，因此需要对对象的调用\nobj.greet(a);\n\n<!-- 写法3：不推荐，容易混淆 -->\n// export.js\nexports.greet = greet;\n\n// import.js\nvar obj = require('./export.js');   // 此时引入的是个对象，因此需要对对象的调用\nobj.greet(a);\n```\n\n> 注意：在写法2和3中，我们可以看到，两者\b导出的均为一个对象。实际上在node中，module.exports和exports是同一个变量，并且初始化为一个空对象{}。在这个空对象中，可以存放键值对形式的方法。**但是如果要导出的是数组或者函数，则必须使用module.exports**，实际上，记住一点即可，使用module.exports总是不会错的！\n\n- 其他：对于引用node的一些内置模块时，可以直接引用其模块名称\n```js\nconst http = require('http');\nhttp.createServer((request, response) => {\n\n}).listen('8080')\n```\n\n### ES6模块化\n- 常见的几种写法\n  1. 直接export导出。es6将其视为一个模块,export分别对外将变量导出\n  ```js\n  // export.js\n  // 也可以写做连续声明变量的形式，去掉第二个export字段，在第一个最后写上','\n  export var name = 'Roy';\n  export function getName(name) {\n    console.log(name);\n  }\n\n  // import.js\n  import {name, getName} from './export.js'\n  getName();\n  ```\n  2. 先正常定义，后导出。推荐此方法，清晰明了\n  ```js\n  // export.js\n  const name = 'Roy';\n  let getName = function (name) {\n    console.log(name);\n  }\n\n  // import.js\n  export {name, getName}; \n  getName();\n  ```\n  3. export导出时候，可以将导出的变量重命名后再导出\n  ```js\n  // export.js\n  const name = 'Roy';\n  let getName = function() {\n    console.log(name);\n  }\n  export {\n    name as nn,\n    getName as get\n  }\n  ```\n\n  4. import导入的时候，可以将导入的变量重命名 \n  ```js\n  // import.js\n  // 注意导入的\b模块名必须和导出时写的变量名一致，同时导入后的模块只读，只能使用，不可再做修改重定义。但是，当且\b导出的是个对象，\b导入的js里面可以修改对象的属性，同时也改变了原始处的值。不推荐使用\n  // 导入时候地址可以相对路径，也可以绝对路径，\n  // 导入时.js后缀可以省略\n  import {getName as getMethod} from './export.js'\n  ```\n\n  5. 设置模块中转站js，匿名转载他处的变量。export2中仅作为中转站，\b在它里面是无法使用export1.js导出的变量\n  ```js\n  // \bexport1.js\n  export let name = 'name', getName = function() {};\n\n  // export2.js\n  export * from './export1.js'  // export {name, getName} from './export1.js'\n\n  // import.js\n  import {name, getName} from './export2.js'\n  console.log(name);\n  console.log(getName());\n  ```\n\n  6. 终极简化1 -> \b\bimport整体引入,用*替代具体的变量名，同时将其重命名。export *命令会忽略export模块的default方法\n  ```js\n  // export.js\n  export var name = 'Roy', function getName() {};\n\n  // import.js\n  import * as obj from './export.js';\n  obj.name;       // > Roy\n  obj.getName();  // \n  ```\n\n  7. 终极简化2 -> export default xxx后，在import时就无需将导入的变量名与导出的保持一致了，用户可以随意命名。实际上export default就是输出了一个叫做default的变量或者方法,然后系统允许在引入它的时候改写为任何名字\n  ```js\n  // export.js\n  var name = 'Roy';\n  export default name;\n\n  // import.js - 注意此处引入时候无需{}\n  import nnn from './export.js'\n  ```\n\n  8. 小结：导出普通变量和函数的小结。注意接口名和内不变量之间要有一一对应关系\n  ```js\n  // \b普通变量 - 1\n  export var m = 1;\n  // 普通变量 - 2\n  var m = 1;\n  export {m};\n  // 普通变量 - 3\n  var m = 1;\n  export {m as n};\n\n  // 函数 - 1\n  e\bxport function getName() {}\n  // 函数 - 2\n  function getName() {}\n  export {getName}\n  ```\n## \b区别\n- \bCommonJS输出的是一个值的拷贝；ES6输出的是值的引用\n- \bCommonJS是模块运行时加载；ES6是编译时完成模块加载，效率更高\n\n> 参考：\n1. [廖雪峰-js教程](https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/001434502419592fd80bbb0613a42118ccab9435af408fd000)\n2. [js当中CommonJS 和es6的模块化引入方案以及比较](https://blog.csdn.net/jackTesla/article/details/80796936)\n3. [ES6新特性：使用export和import实现模块化](https://www.cnblogs.com/diligenceday/p/5503777.html)\n4. [阮一峰-ES6模块化](http://es6.ruanyifeng.com/#docs/module)","slug":"commonJS和ES6模块化","published":1,"updated":"2018-09-02T13:15:25.795Z","layout":"post","photos":[],"link":"","_id":"ck0qbmhfi0004uyfyvlwghx8y","content":"<blockquote>\n<p>\b随js语言持续优化，为我们的开发带来较大的便利性。但是在使用node和es6的模块化功能时候，两者的使用方式还是有点区别。在这里做一小结，\b以便日后查阅</p>\n</blockquote>\n<h2 id=\"基本的使用规范\"><a href=\"#基本的使用规范\" class=\"headerlink\" title=\"\b基本的使用规范\"></a>\b基本的使用规范</h2><h3 id=\"CommonJS\"><a href=\"#CommonJS\" class=\"headerlink\" title=\"CommonJS\"></a>CommonJS</h3><ul>\n<li>\b主要是Node.js的使用规范，</li>\n<li>每一个js都是一个独立的模块，并且里面的变量名称互不冲突。使用规则为一个模块向外导出变量，另一个模块导入变量</li>\n<li>语法<ol>\n<li>导出的模块：module.exports = ‘变量名’</li>\n<li>导入的模块：var newName = require(‘./\b导出模块的路径’);</li>\n</ol>\n</li>\n<li>注意使用事项：由于导出的写法不同，因此导入后的使用方式也不通具体如下<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 写法一 --&gt;</span><br><span class=\"line\"><span class=\"comment\">// export.js</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">'Shen Zhen'</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">greet</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">`welcome <span class=\"subst\">$&#123;name&#125;</span>, <span class=\"subst\">$&#123;a&#125;</span>`</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = greet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// import.js</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">'Roy'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> method = <span class=\"built_in\">require</span>(<span class=\"string\">'./export.js'</span>);</span><br><span class=\"line\">method(a);  <span class=\"comment\">// 直接将引入的方法调用</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 写法<span class=\"number\">2</span> --&gt;</span><br><span class=\"line\"><span class=\"comment\">// export.js</span></span><br><span class=\"line\">\b<span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  greet: greet</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// import.js</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = <span class=\"built_in\">require</span>(<span class=\"string\">'./export.js'</span>);   <span class=\"comment\">// 此时引入的是个对象，因此需要对对象的调用</span></span><br><span class=\"line\">obj.greet(a);</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 写法<span class=\"number\">3</span>：不推荐，容易混淆 --&gt;</span><br><span class=\"line\"><span class=\"comment\">// export.js</span></span><br><span class=\"line\">exports.greet = greet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// import.js</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = <span class=\"built_in\">require</span>(<span class=\"string\">'./export.js'</span>);   <span class=\"comment\">// 此时引入的是个对象，因此需要对对象的调用</span></span><br><span class=\"line\">obj.greet(a);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>注意：在写法2和3中，我们可以看到，两者\b导出的均为一个对象。实际上在node中，module.exports和exports是同一个变量，并且初始化为一个空对象{}。在这个空对象中，可以存放键值对形式的方法。<strong>但是如果要导出的是数组或者函数，则必须使用module.exports</strong>，实际上，记住一点即可，使用module.exports总是不会错的！</p>\n</blockquote>\n<ul>\n<li>其他：对于引用node的一些内置模块时，可以直接引用其模块名称<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">'http'</span>);</span><br><span class=\"line\">http.createServer(<span class=\"function\">(<span class=\"params\">request, response</span>) =&gt;</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;).listen(<span class=\"string\">'8080'</span>)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"ES6模块化\"><a href=\"#ES6模块化\" class=\"headerlink\" title=\"ES6模块化\"></a>ES6模块化</h3><ul>\n<li><p>常见的几种写法</p>\n<ol>\n<li><p>直接export导出。es6将其视为一个模块,export分别对外将变量导出</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// export.js</span></span><br><span class=\"line\"><span class=\"comment\">// 也可以写做连续声明变量的形式，去掉第二个export字段，在第一个最后写上','</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">var</span> name = <span class=\"string\">'Roy'</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getName</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// import.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;name, getName&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./export.js'</span></span><br><span class=\"line\">getName();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>先正常定义，后导出。推荐此方法，清晰明了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// export.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">'Roy'</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> getName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// import.js</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123;name, getName&#125;; </span><br><span class=\"line\">getName();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>export导出时候，可以将导出的变量重命名后再导出</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// export.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">'Roy'</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> getName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123;</span><br><span class=\"line\">  name <span class=\"keyword\">as</span> nn,</span><br><span class=\"line\">  getName <span class=\"keyword\">as</span> get</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>import导入的时候，可以将导入的变量重命名 </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// import.js</span></span><br><span class=\"line\"><span class=\"comment\">// 注意导入的\b模块名必须和导出时写的变量名一致，同时导入后的模块只读，只能使用，不可再做修改重定义。但是，当且\b导出的是个对象，\b导入的js里面可以修改对象的属性，同时也改变了原始处的值。不推荐使用</span></span><br><span class=\"line\"><span class=\"comment\">// 导入时候地址可以相对路径，也可以绝对路径，</span></span><br><span class=\"line\"><span class=\"comment\">// 导入时.js后缀可以省略</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;getName <span class=\"keyword\">as</span> getMethod&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./export.js'</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置模块中转站js，匿名转载他处的变量。export2中仅作为中转站，\b在它里面是无法使用export1.js导出的变量</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// \bexport1.js</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">let</span> name = <span class=\"string\">'name'</span>, getName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// export2.js</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> * <span class=\"keyword\">from</span> <span class=\"string\">'./export1.js'</span>  <span class=\"comment\">// export &#123;name, getName&#125; from './export1.js'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// import.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;name, getName&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./export2.js'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(name);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(getName());</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>终极简化1 -&gt; \b\bimport整体引入,用<em>替代具体的变量名，同时将其重命名。export </em>命令会忽略export模块的default方法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// export.js</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">var</span> name = <span class=\"string\">'Roy'</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getName</span>(<span class=\"params\"></span>) </span>&#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// import.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> obj <span class=\"keyword\">from</span> <span class=\"string\">'./export.js'</span>;</span><br><span class=\"line\">obj.name;       <span class=\"comment\">// &gt; Roy</span></span><br><span class=\"line\">obj.getName();  <span class=\"comment\">//</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>终极简化2 -&gt; export default xxx后，在import时就无需将导入的变量名与导出的保持一致了，用户可以随意命名。实际上export default就是输出了一个叫做default的变量或者方法,然后系统允许在引入它的时候改写为任何名字</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// export.js</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">'Roy'</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> name;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// import.js - 注意此处引入时候无需&#123;&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> nnn <span class=\"keyword\">from</span> <span class=\"string\">'./export.js'</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>小结：导出普通变量和函数的小结。注意接口名和内不变量之间要有一一对应关系</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// \b普通变量 - 1</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">var</span> m = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"comment\">// 普通变量 - 2</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> m = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123;m&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 普通变量 - 3</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> m = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123;m <span class=\"keyword\">as</span> n&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函数 - 1</span></span><br><span class=\"line\">e\bxport <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getName</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">// 函数 - 2</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getName</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123;getName&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"区别\"><a href=\"#区别\" class=\"headerlink\" title=\"\b区别\"></a>\b区别</h2><ul>\n<li>\bCommonJS输出的是一个值的拷贝；ES6输出的是值的引用</li>\n<li>\bCommonJS是模块运行时加载；ES6是编译时完成模块加载，效率更高</li>\n</ul>\n<blockquote>\n<p>参考：</p>\n<ol>\n<li><a href=\"https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/001434502419592fd80bbb0613a42118ccab9435af408fd000\" target=\"_blank\" rel=\"noopener\">廖雪峰-js教程</a></li>\n<li><a href=\"https://blog.csdn.net/jackTesla/article/details/80796936\" target=\"_blank\" rel=\"noopener\">js当中CommonJS 和es6的模块化引入方案以及比较</a></li>\n<li><a href=\"https://www.cnblogs.com/diligenceday/p/5503777.html\" target=\"_blank\" rel=\"noopener\">ES6新特性：使用export和import实现模块化</a></li>\n<li><a href=\"http://es6.ruanyifeng.com/#docs/module\" target=\"_blank\" rel=\"noopener\">阮一峰-ES6模块化</a></li>\n</ol>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>\b随js语言持续优化，为我们的开发带来较大的便利性。但是在使用node和es6的模块化功能时候，两者的使用方式还是有点区别。在这里做一小结，\b以便日后查阅</p>\n</blockquote>\n<h2 id=\"基本的使用规范\"><a href=\"#基本的使用规范\" class=\"headerlink\" title=\"\b基本的使用规范\"></a>\b基本的使用规范</h2><h3 id=\"CommonJS\"><a href=\"#CommonJS\" class=\"headerlink\" title=\"CommonJS\"></a>CommonJS</h3><ul>\n<li>\b主要是Node.js的使用规范，</li>\n<li>每一个js都是一个独立的模块，并且里面的变量名称互不冲突。使用规则为一个模块向外导出变量，另一个模块导入变量</li>\n<li>语法<ol>\n<li>导出的模块：module.exports = ‘变量名’</li>\n<li>导入的模块：var newName = require(‘./\b导出模块的路径’);</li>\n</ol>\n</li>\n<li>注意使用事项：由于导出的写法不同，因此导入后的使用方式也不通具体如下<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 写法一 --&gt;</span><br><span class=\"line\"><span class=\"comment\">// export.js</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">'Shen Zhen'</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">greet</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">`welcome <span class=\"subst\">$&#123;name&#125;</span>, <span class=\"subst\">$&#123;a&#125;</span>`</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = greet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// import.js</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">'Roy'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> method = <span class=\"built_in\">require</span>(<span class=\"string\">'./export.js'</span>);</span><br><span class=\"line\">method(a);  <span class=\"comment\">// 直接将引入的方法调用</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 写法<span class=\"number\">2</span> --&gt;</span><br><span class=\"line\"><span class=\"comment\">// export.js</span></span><br><span class=\"line\">\b<span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  greet: greet</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// import.js</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = <span class=\"built_in\">require</span>(<span class=\"string\">'./export.js'</span>);   <span class=\"comment\">// 此时引入的是个对象，因此需要对对象的调用</span></span><br><span class=\"line\">obj.greet(a);</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 写法<span class=\"number\">3</span>：不推荐，容易混淆 --&gt;</span><br><span class=\"line\"><span class=\"comment\">// export.js</span></span><br><span class=\"line\">exports.greet = greet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// import.js</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = <span class=\"built_in\">require</span>(<span class=\"string\">'./export.js'</span>);   <span class=\"comment\">// 此时引入的是个对象，因此需要对对象的调用</span></span><br><span class=\"line\">obj.greet(a);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>注意：在写法2和3中，我们可以看到，两者\b导出的均为一个对象。实际上在node中，module.exports和exports是同一个变量，并且初始化为一个空对象{}。在这个空对象中，可以存放键值对形式的方法。<strong>但是如果要导出的是数组或者函数，则必须使用module.exports</strong>，实际上，记住一点即可，使用module.exports总是不会错的！</p>\n</blockquote>\n<ul>\n<li>其他：对于引用node的一些内置模块时，可以直接引用其模块名称<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">'http'</span>);</span><br><span class=\"line\">http.createServer(<span class=\"function\">(<span class=\"params\">request, response</span>) =&gt;</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;).listen(<span class=\"string\">'8080'</span>)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"ES6模块化\"><a href=\"#ES6模块化\" class=\"headerlink\" title=\"ES6模块化\"></a>ES6模块化</h3><ul>\n<li><p>常见的几种写法</p>\n<ol>\n<li><p>直接export导出。es6将其视为一个模块,export分别对外将变量导出</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// export.js</span></span><br><span class=\"line\"><span class=\"comment\">// 也可以写做连续声明变量的形式，去掉第二个export字段，在第一个最后写上','</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">var</span> name = <span class=\"string\">'Roy'</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getName</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// import.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;name, getName&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./export.js'</span></span><br><span class=\"line\">getName();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>先正常定义，后导出。推荐此方法，清晰明了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// export.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">'Roy'</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> getName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// import.js</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123;name, getName&#125;; </span><br><span class=\"line\">getName();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>export导出时候，可以将导出的变量重命名后再导出</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// export.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">'Roy'</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> getName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123;</span><br><span class=\"line\">  name <span class=\"keyword\">as</span> nn,</span><br><span class=\"line\">  getName <span class=\"keyword\">as</span> get</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>import导入的时候，可以将导入的变量重命名 </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// import.js</span></span><br><span class=\"line\"><span class=\"comment\">// 注意导入的\b模块名必须和导出时写的变量名一致，同时导入后的模块只读，只能使用，不可再做修改重定义。但是，当且\b导出的是个对象，\b导入的js里面可以修改对象的属性，同时也改变了原始处的值。不推荐使用</span></span><br><span class=\"line\"><span class=\"comment\">// 导入时候地址可以相对路径，也可以绝对路径，</span></span><br><span class=\"line\"><span class=\"comment\">// 导入时.js后缀可以省略</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;getName <span class=\"keyword\">as</span> getMethod&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./export.js'</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置模块中转站js，匿名转载他处的变量。export2中仅作为中转站，\b在它里面是无法使用export1.js导出的变量</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// \bexport1.js</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">let</span> name = <span class=\"string\">'name'</span>, getName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// export2.js</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> * <span class=\"keyword\">from</span> <span class=\"string\">'./export1.js'</span>  <span class=\"comment\">// export &#123;name, getName&#125; from './export1.js'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// import.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;name, getName&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./export2.js'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(name);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(getName());</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>终极简化1 -&gt; \b\bimport整体引入,用<em>替代具体的变量名，同时将其重命名。export </em>命令会忽略export模块的default方法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// export.js</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">var</span> name = <span class=\"string\">'Roy'</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getName</span>(<span class=\"params\"></span>) </span>&#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// import.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> obj <span class=\"keyword\">from</span> <span class=\"string\">'./export.js'</span>;</span><br><span class=\"line\">obj.name;       <span class=\"comment\">// &gt; Roy</span></span><br><span class=\"line\">obj.getName();  <span class=\"comment\">//</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>终极简化2 -&gt; export default xxx后，在import时就无需将导入的变量名与导出的保持一致了，用户可以随意命名。实际上export default就是输出了一个叫做default的变量或者方法,然后系统允许在引入它的时候改写为任何名字</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// export.js</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">'Roy'</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> name;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// import.js - 注意此处引入时候无需&#123;&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> nnn <span class=\"keyword\">from</span> <span class=\"string\">'./export.js'</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>小结：导出普通变量和函数的小结。注意接口名和内不变量之间要有一一对应关系</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// \b普通变量 - 1</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">var</span> m = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"comment\">// 普通变量 - 2</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> m = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123;m&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 普通变量 - 3</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> m = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123;m <span class=\"keyword\">as</span> n&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函数 - 1</span></span><br><span class=\"line\">e\bxport <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getName</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">// 函数 - 2</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getName</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123;getName&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"区别\"><a href=\"#区别\" class=\"headerlink\" title=\"\b区别\"></a>\b区别</h2><ul>\n<li>\bCommonJS输出的是一个值的拷贝；ES6输出的是值的引用</li>\n<li>\bCommonJS是模块运行时加载；ES6是编译时完成模块加载，效率更高</li>\n</ul>\n<blockquote>\n<p>参考：</p>\n<ol>\n<li><a href=\"https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/001434502419592fd80bbb0613a42118ccab9435af408fd000\" target=\"_blank\" rel=\"noopener\">廖雪峰-js教程</a></li>\n<li><a href=\"https://blog.csdn.net/jackTesla/article/details/80796936\" target=\"_blank\" rel=\"noopener\">js当中CommonJS 和es6的模块化引入方案以及比较</a></li>\n<li><a href=\"https://www.cnblogs.com/diligenceday/p/5503777.html\" target=\"_blank\" rel=\"noopener\">ES6新特性：使用export和import实现模块化</a></li>\n<li><a href=\"http://es6.ruanyifeng.com/#docs/module\" target=\"_blank\" rel=\"noopener\">阮一峰-ES6模块化</a></li>\n</ol>\n</blockquote>\n"},{"title":"git日常命令","copyright":true,"date":"2018-08-25T09:53:50.000Z","comments":1,"password":null,"_content":"\n\n## Git提交代码常规\n### Git add的几种区别\n\n- git add .\n提交被修改(modified)文件和新文件(new)，不包括被删除(deleted)文件\n\n- git add -u => git add --update\n提交被修改(modified)和被删除(deleted)文件，不包括新文件(new)\n\n- git add -A => git add --all \n提交所有变化\n\n### git使用说明\n> 场景：新增功能，使用新的分支开发\n```code\n1. 在github或码云中，新建分支，输入新分支名称,如： index-swiper\n2. 打开项目，cd至项目文件根目录\n    git pull：拉分支代码至本地\n3. 切换新的分支\n    git checkout index-swiper\n4. 新的分支上开发\n5. 提交代码（本地index-swiper => 远程index-swiper）\n    git add -A  提交在本地暂存空间\n    git commit -m '本次提交的说明'\n    git push    将本地分支代码提交至远程分支\n6. 切换至本地的master分支\n    git checkout master\n7. 将线上的index-swiper分支内容与本地的master合并\n    git merge origin/index-swiper\n8. 将本地master的代码提交至远程master\n    git push\n9. 显示git的修改日志\n    git log --pretty=oneline\n```\n\n### 删除git远程文件或者文件夹\n```code\n// 是否下载指定的分支，否则则是默认的master分支，如果没有设置setting的default分支\ngit clone git@github.com:RogueSword/RogueSword.github.io.git\ngit clone -b next git@github.com:RogueSword/RogueSword.github.io.git\n\ngit rm theme/test.txt     // 删除一级目录下的test文件的\b操作\ngit rm -r theme              // 删除一级目录下的theme文件夹\n```\n\n### 删除本地及远程分支\n```code\n1. 删除远程分支\n    git push origin :BranchName\n    git push origin -D BranchName\n2. 删除本地分支\n    git branch -D BranchName\n```\n\n### git的几种[撤销](https://blog.csdn.net/kongbaidepao/article/details/52253774)+[git push撤销](https://blog.csdn.net/hanchao5272/article/details/79435730)\n```\n1. git add 的撤销\n    git status 先看一下add 中的文件 \n    git reset HEAD 如果后面什么都不跟的话 就是上一次add 里面的全部撤销了 \n    git reset HEAD XXX/XXX/XXX.java 就是对某个文件进行撤销了\n2. git commit 的撤销\n    git log 查看节点\n    git reset commit_id\n3. git push的撤销\n    git revert HEAD\n    git revert HEAD 撤销前一次 commit \n    git revert HEAD^ 撤销前前一次 commit\n\n    // 方法2\n    \bgit log    // 查看提交信息，以便找到会退的版本号码\n    git reset --soft 版本号  // 保留当前工作区，\b以便重新提交\n              --hard 版本号  // 撤销相应工作区的修改\n    git log    // 查看当前的提交信息，确认是否已经回退\n    git push origin master –force   // 强制提交当前版本号，以达到撤销版本号的目的。必须添加参数force进行强制提交，否则会提交失败\n    // 接着常规操作\n    git add .\n    git commit -m 'xxx'\n    git push origin xxx\n```\n\n### git pull详细示例\n- 定义： 从另一个存储库或本地分支获取并集成（整合）。取回远程某个分支的更新，再与本地的指定分支合并\n- 语法：git pull [options] [<repository>[<refspec>...]]\n- 白话：git pull <远程主机名> <远程分支名>:<本地分支名>\n\n```\n示例：\n1. 取回远程分支next，并与本地分支master合并\n    git pull origin next:master\n2. 取回远程分支next，并与本地当前的分支合并\n    git pull origin next\n2.1 拓展实质\n    上述表示取回origin/next分支，再与当前分支合并。实质上等同于先做git fetch, 再执行git merge\n    git fetch origin\n    git merge origin/next\n\n3. 拓展：在git中，git会自动在本地分支和远程分支之间，建立一种追踪关系。比如，git clone的时候，所有本地的分支默认与远程主机的同名分支，建立追踪关系，即本地master分支，自动追踪远程origin/master分支\n3.1 当然也可以手动建立追踪关系。指定本地master分支追踪远程origin/next分支\n    git branch --set-upstream master origin/next\n3.2 如果当前分支与远程分支存在追踪关系，git pull可以省略远程分支名\n    git pull origin\n3.3 如果当前分支只有一个追踪分支，可以省略主机名\n    git pull\n```\n\n## 快速上手\n### git初始化五连\n```\n git init (初始化本地仓库)\n git add .  （将本地所有文件加到仓库里）\n git commit -m \"message\" （设置提交信息）\n git remote add origin git@github.com:sunningcarryhaha/flexSupplement.git（本地仓库链接远程仓库）\n \n git push -u origin master （push文件到仓库中）\n git push --set-upstream origin master\n\n```\n\n## 其他易错点\n### git pull 和 git merge的区别\n- git fetch 是指从远程获取最新版本到本地，不会自动合并\n- 在实际使用中，git fetch更安全一些，因为在merge前，我们可以查看更新情况，然后再决定是否合并。\n\n```\n示例-写法1：\ngit fetch origin master             // 远程分支取回\ngit log -p master..origin/master    // 对比本地master与远程master区别\ngit merge origin/master             // 将fetch放在存储库里的内容与本地工作区合并\n```\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/modernizr/2.8.3/modernizr.min.js\" type=\"text/javascript\"></script>\n\n\n### 查看远程分支\n```\n1. git branch -r    // 查看当前远程分支\n2. git branch -a    // 查看所有分支，远程及本地\n```\n\n### 创建.gitignore文件，忽略git不必要提交文件\n```code\ntouch .gitignore    // 创建.gitignore文件\n\b// 在文件录入：\n.deploy_git/\nnode_modules/\npublic/\n```\n\n> 参考：\n1. [Git-SSH文章链接](https://blog.csdn.net/superxlcr/article/details/51354257)\n2. [Git命令详解](https://www.yiibai.com/git/git_pull.html)","source":"_posts/git日常命令.md","raw":"---\ntitle: git日常命令\ncopyright: true\ndate: 2018-08-25 17:53:50\ntags:\ncategories:\ncomments:\npassword:\n---\n\n\n## Git提交代码常规\n### Git add的几种区别\n\n- git add .\n提交被修改(modified)文件和新文件(new)，不包括被删除(deleted)文件\n\n- git add -u => git add --update\n提交被修改(modified)和被删除(deleted)文件，不包括新文件(new)\n\n- git add -A => git add --all \n提交所有变化\n\n### git使用说明\n> 场景：新增功能，使用新的分支开发\n```code\n1. 在github或码云中，新建分支，输入新分支名称,如： index-swiper\n2. 打开项目，cd至项目文件根目录\n    git pull：拉分支代码至本地\n3. 切换新的分支\n    git checkout index-swiper\n4. 新的分支上开发\n5. 提交代码（本地index-swiper => 远程index-swiper）\n    git add -A  提交在本地暂存空间\n    git commit -m '本次提交的说明'\n    git push    将本地分支代码提交至远程分支\n6. 切换至本地的master分支\n    git checkout master\n7. 将线上的index-swiper分支内容与本地的master合并\n    git merge origin/index-swiper\n8. 将本地master的代码提交至远程master\n    git push\n9. 显示git的修改日志\n    git log --pretty=oneline\n```\n\n### 删除git远程文件或者文件夹\n```code\n// 是否下载指定的分支，否则则是默认的master分支，如果没有设置setting的default分支\ngit clone git@github.com:RogueSword/RogueSword.github.io.git\ngit clone -b next git@github.com:RogueSword/RogueSword.github.io.git\n\ngit rm theme/test.txt     // 删除一级目录下的test文件的\b操作\ngit rm -r theme              // 删除一级目录下的theme文件夹\n```\n\n### 删除本地及远程分支\n```code\n1. 删除远程分支\n    git push origin :BranchName\n    git push origin -D BranchName\n2. 删除本地分支\n    git branch -D BranchName\n```\n\n### git的几种[撤销](https://blog.csdn.net/kongbaidepao/article/details/52253774)+[git push撤销](https://blog.csdn.net/hanchao5272/article/details/79435730)\n```\n1. git add 的撤销\n    git status 先看一下add 中的文件 \n    git reset HEAD 如果后面什么都不跟的话 就是上一次add 里面的全部撤销了 \n    git reset HEAD XXX/XXX/XXX.java 就是对某个文件进行撤销了\n2. git commit 的撤销\n    git log 查看节点\n    git reset commit_id\n3. git push的撤销\n    git revert HEAD\n    git revert HEAD 撤销前一次 commit \n    git revert HEAD^ 撤销前前一次 commit\n\n    // 方法2\n    \bgit log    // 查看提交信息，以便找到会退的版本号码\n    git reset --soft 版本号  // 保留当前工作区，\b以便重新提交\n              --hard 版本号  // 撤销相应工作区的修改\n    git log    // 查看当前的提交信息，确认是否已经回退\n    git push origin master –force   // 强制提交当前版本号，以达到撤销版本号的目的。必须添加参数force进行强制提交，否则会提交失败\n    // 接着常规操作\n    git add .\n    git commit -m 'xxx'\n    git push origin xxx\n```\n\n### git pull详细示例\n- 定义： 从另一个存储库或本地分支获取并集成（整合）。取回远程某个分支的更新，再与本地的指定分支合并\n- 语法：git pull [options] [<repository>[<refspec>...]]\n- 白话：git pull <远程主机名> <远程分支名>:<本地分支名>\n\n```\n示例：\n1. 取回远程分支next，并与本地分支master合并\n    git pull origin next:master\n2. 取回远程分支next，并与本地当前的分支合并\n    git pull origin next\n2.1 拓展实质\n    上述表示取回origin/next分支，再与当前分支合并。实质上等同于先做git fetch, 再执行git merge\n    git fetch origin\n    git merge origin/next\n\n3. 拓展：在git中，git会自动在本地分支和远程分支之间，建立一种追踪关系。比如，git clone的时候，所有本地的分支默认与远程主机的同名分支，建立追踪关系，即本地master分支，自动追踪远程origin/master分支\n3.1 当然也可以手动建立追踪关系。指定本地master分支追踪远程origin/next分支\n    git branch --set-upstream master origin/next\n3.2 如果当前分支与远程分支存在追踪关系，git pull可以省略远程分支名\n    git pull origin\n3.3 如果当前分支只有一个追踪分支，可以省略主机名\n    git pull\n```\n\n## 快速上手\n### git初始化五连\n```\n git init (初始化本地仓库)\n git add .  （将本地所有文件加到仓库里）\n git commit -m \"message\" （设置提交信息）\n git remote add origin git@github.com:sunningcarryhaha/flexSupplement.git（本地仓库链接远程仓库）\n \n git push -u origin master （push文件到仓库中）\n git push --set-upstream origin master\n\n```\n\n## 其他易错点\n### git pull 和 git merge的区别\n- git fetch 是指从远程获取最新版本到本地，不会自动合并\n- 在实际使用中，git fetch更安全一些，因为在merge前，我们可以查看更新情况，然后再决定是否合并。\n\n```\n示例-写法1：\ngit fetch origin master             // 远程分支取回\ngit log -p master..origin/master    // 对比本地master与远程master区别\ngit merge origin/master             // 将fetch放在存储库里的内容与本地工作区合并\n```\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/modernizr/2.8.3/modernizr.min.js\" type=\"text/javascript\"></script>\n\n\n### 查看远程分支\n```\n1. git branch -r    // 查看当前远程分支\n2. git branch -a    // 查看所有分支，远程及本地\n```\n\n### 创建.gitignore文件，忽略git不必要提交文件\n```code\ntouch .gitignore    // 创建.gitignore文件\n\b// 在文件录入：\n.deploy_git/\nnode_modules/\npublic/\n```\n\n> 参考：\n1. [Git-SSH文章链接](https://blog.csdn.net/superxlcr/article/details/51354257)\n2. [Git命令详解](https://www.yiibai.com/git/git_pull.html)","slug":"git日常命令","published":1,"updated":"2018-09-02T13:13:34.871Z","layout":"post","photos":[],"link":"","_id":"ck0qbmhfp0008uyfyjonnr0ng","content":"<h2 id=\"Git提交代码常规\"><a href=\"#Git提交代码常规\" class=\"headerlink\" title=\"Git提交代码常规\"></a>Git提交代码常规</h2><h3 id=\"Git-add的几种区别\"><a href=\"#Git-add的几种区别\" class=\"headerlink\" title=\"Git add的几种区别\"></a>Git add的几种区别</h3><ul>\n<li><p>git add .<br>提交被修改(modified)文件和新文件(new)，不包括被删除(deleted)文件</p>\n</li>\n<li><p>git add -u =&gt; git add –update<br>提交被修改(modified)和被删除(deleted)文件，不包括新文件(new)</p>\n</li>\n<li><p>git add -A =&gt; git add –all<br>提交所有变化</p>\n</li>\n</ul>\n<h3 id=\"git使用说明\"><a href=\"#git使用说明\" class=\"headerlink\" title=\"git使用说明\"></a>git使用说明</h3><blockquote>\n<p>场景：新增功能，使用新的分支开发<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 在github或码云中，新建分支，输入新分支名称,如： index-swiper</span><br><span class=\"line\">2. 打开项目，cd至项目文件根目录</span><br><span class=\"line\">    git pull：拉分支代码至本地</span><br><span class=\"line\">3. 切换新的分支</span><br><span class=\"line\">    git checkout index-swiper</span><br><span class=\"line\">4. 新的分支上开发</span><br><span class=\"line\">5. 提交代码（本地index-swiper =&gt; 远程index-swiper）</span><br><span class=\"line\">    git add -A  提交在本地暂存空间</span><br><span class=\"line\">    git commit -m &apos;本次提交的说明&apos;</span><br><span class=\"line\">    git push    将本地分支代码提交至远程分支</span><br><span class=\"line\">6. 切换至本地的master分支</span><br><span class=\"line\">    git checkout master</span><br><span class=\"line\">7. 将线上的index-swiper分支内容与本地的master合并</span><br><span class=\"line\">    git merge origin/index-swiper</span><br><span class=\"line\">8. 将本地master的代码提交至远程master</span><br><span class=\"line\">    git push</span><br><span class=\"line\">9. 显示git的修改日志</span><br><span class=\"line\">    git log --pretty=oneline</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h3 id=\"删除git远程文件或者文件夹\"><a href=\"#删除git远程文件或者文件夹\" class=\"headerlink\" title=\"删除git远程文件或者文件夹\"></a>删除git远程文件或者文件夹</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 是否下载指定的分支，否则则是默认的master分支，如果没有设置setting的default分支</span><br><span class=\"line\">git clone git@github.com:RogueSword/RogueSword.github.io.git</span><br><span class=\"line\">git clone -b next git@github.com:RogueSword/RogueSword.github.io.git</span><br><span class=\"line\"></span><br><span class=\"line\">git rm theme/test.txt     // 删除一级目录下的test文件的\b操作</span><br><span class=\"line\">git rm -r theme              // 删除一级目录下的theme文件夹</span><br></pre></td></tr></table></figure>\n<h3 id=\"删除本地及远程分支\"><a href=\"#删除本地及远程分支\" class=\"headerlink\" title=\"删除本地及远程分支\"></a>删除本地及远程分支</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 删除远程分支</span><br><span class=\"line\">    git push origin :BranchName</span><br><span class=\"line\">    git push origin -D BranchName</span><br><span class=\"line\">2. 删除本地分支</span><br><span class=\"line\">    git branch -D BranchName</span><br></pre></td></tr></table></figure>\n<h3 id=\"git的几种撤销-git-push撤销\"><a href=\"#git的几种撤销-git-push撤销\" class=\"headerlink\" title=\"git的几种撤销+git push撤销\"></a>git的几种<a href=\"https://blog.csdn.net/kongbaidepao/article/details/52253774\" target=\"_blank\" rel=\"noopener\">撤销</a>+<a href=\"https://blog.csdn.net/hanchao5272/article/details/79435730\" target=\"_blank\" rel=\"noopener\">git push撤销</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. git add 的撤销</span><br><span class=\"line\">    git status 先看一下add 中的文件 </span><br><span class=\"line\">    git reset HEAD 如果后面什么都不跟的话 就是上一次add 里面的全部撤销了 </span><br><span class=\"line\">    git reset HEAD XXX/XXX/XXX.java 就是对某个文件进行撤销了</span><br><span class=\"line\">2. git commit 的撤销</span><br><span class=\"line\">    git log 查看节点</span><br><span class=\"line\">    git reset commit_id</span><br><span class=\"line\">3. git push的撤销</span><br><span class=\"line\">    git revert HEAD</span><br><span class=\"line\">    git revert HEAD 撤销前一次 commit </span><br><span class=\"line\">    git revert HEAD^ 撤销前前一次 commit</span><br><span class=\"line\"></span><br><span class=\"line\">    // 方法2</span><br><span class=\"line\">    \bgit log    // 查看提交信息，以便找到会退的版本号码</span><br><span class=\"line\">    git reset --soft 版本号  // 保留当前工作区，\b以便重新提交</span><br><span class=\"line\">              --hard 版本号  // 撤销相应工作区的修改</span><br><span class=\"line\">    git log    // 查看当前的提交信息，确认是否已经回退</span><br><span class=\"line\">    git push origin master –force   // 强制提交当前版本号，以达到撤销版本号的目的。必须添加参数force进行强制提交，否则会提交失败</span><br><span class=\"line\">    // 接着常规操作</span><br><span class=\"line\">    git add .</span><br><span class=\"line\">    git commit -m &apos;xxx&apos;</span><br><span class=\"line\">    git push origin xxx</span><br></pre></td></tr></table></figure>\n<h3 id=\"git-pull详细示例\"><a href=\"#git-pull详细示例\" class=\"headerlink\" title=\"git pull详细示例\"></a>git pull详细示例</h3><ul>\n<li>定义： 从另一个存储库或本地分支获取并集成（整合）。取回远程某个分支的更新，再与本地的指定分支合并</li>\n<li>语法：git pull [options] [<repository>[<refspec>…]]</refspec></repository></li>\n<li>白话：git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">示例：</span><br><span class=\"line\">1. 取回远程分支next，并与本地分支master合并</span><br><span class=\"line\">    git pull origin next:master</span><br><span class=\"line\">2. 取回远程分支next，并与本地当前的分支合并</span><br><span class=\"line\">    git pull origin next</span><br><span class=\"line\">2.1 拓展实质</span><br><span class=\"line\">    上述表示取回origin/next分支，再与当前分支合并。实质上等同于先做git fetch, 再执行git merge</span><br><span class=\"line\">    git fetch origin</span><br><span class=\"line\">    git merge origin/next</span><br><span class=\"line\"></span><br><span class=\"line\">3. 拓展：在git中，git会自动在本地分支和远程分支之间，建立一种追踪关系。比如，git clone的时候，所有本地的分支默认与远程主机的同名分支，建立追踪关系，即本地master分支，自动追踪远程origin/master分支</span><br><span class=\"line\">3.1 当然也可以手动建立追踪关系。指定本地master分支追踪远程origin/next分支</span><br><span class=\"line\">    git branch --set-upstream master origin/next</span><br><span class=\"line\">3.2 如果当前分支与远程分支存在追踪关系，git pull可以省略远程分支名</span><br><span class=\"line\">    git pull origin</span><br><span class=\"line\">3.3 如果当前分支只有一个追踪分支，可以省略主机名</span><br><span class=\"line\">    git pull</span><br></pre></td></tr></table></figure>\n<h2 id=\"快速上手\"><a href=\"#快速上手\" class=\"headerlink\" title=\"快速上手\"></a>快速上手</h2><h3 id=\"git初始化五连\"><a href=\"#git初始化五连\" class=\"headerlink\" title=\"git初始化五连\"></a>git初始化五连</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init (初始化本地仓库)</span><br><span class=\"line\">git add .  （将本地所有文件加到仓库里）</span><br><span class=\"line\">git commit -m &quot;message&quot; （设置提交信息）</span><br><span class=\"line\">git remote add origin git@github.com:sunningcarryhaha/flexSupplement.git（本地仓库链接远程仓库）</span><br><span class=\"line\"></span><br><span class=\"line\">git push -u origin master （push文件到仓库中）</span><br><span class=\"line\">git push --set-upstream origin master</span><br></pre></td></tr></table></figure>\n<h2 id=\"其他易错点\"><a href=\"#其他易错点\" class=\"headerlink\" title=\"其他易错点\"></a>其他易错点</h2><h3 id=\"git-pull-和-git-merge的区别\"><a href=\"#git-pull-和-git-merge的区别\" class=\"headerlink\" title=\"git pull 和 git merge的区别\"></a>git pull 和 git merge的区别</h3><ul>\n<li>git fetch 是指从远程获取最新版本到本地，不会自动合并</li>\n<li>在实际使用中，git fetch更安全一些，因为在merge前，我们可以查看更新情况，然后再决定是否合并。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">示例-写法1：</span><br><span class=\"line\">git fetch origin master             // 远程分支取回</span><br><span class=\"line\">git log -p master..origin/master    // 对比本地master与远程master区别</span><br><span class=\"line\">git merge origin/master             // 将fetch放在存储库里的内容与本地工作区合并</span><br></pre></td></tr></table></figure>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/modernizr/2.8.3/modernizr.min.js\" type=\"text/javascript\"></script>\n\n\n<h3 id=\"查看远程分支\"><a href=\"#查看远程分支\" class=\"headerlink\" title=\"查看远程分支\"></a>查看远程分支</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. git branch -r    // 查看当前远程分支</span><br><span class=\"line\">2. git branch -a    // 查看所有分支，远程及本地</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建-gitignore文件，忽略git不必要提交文件\"><a href=\"#创建-gitignore文件，忽略git不必要提交文件\" class=\"headerlink\" title=\"创建.gitignore文件，忽略git不必要提交文件\"></a>创建.gitignore文件，忽略git不必要提交文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch .gitignore    // 创建.gitignore文件</span><br><span class=\"line\">\b// 在文件录入：</span><br><span class=\"line\">.deploy_git/</span><br><span class=\"line\">node_modules/</span><br><span class=\"line\">public/</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>参考：</p>\n<ol>\n<li><a href=\"https://blog.csdn.net/superxlcr/article/details/51354257\" target=\"_blank\" rel=\"noopener\">Git-SSH文章链接</a></li>\n<li><a href=\"https://www.yiibai.com/git/git_pull.html\" target=\"_blank\" rel=\"noopener\">Git命令详解</a></li>\n</ol>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Git提交代码常规\"><a href=\"#Git提交代码常规\" class=\"headerlink\" title=\"Git提交代码常规\"></a>Git提交代码常规</h2><h3 id=\"Git-add的几种区别\"><a href=\"#Git-add的几种区别\" class=\"headerlink\" title=\"Git add的几种区别\"></a>Git add的几种区别</h3><ul>\n<li><p>git add .<br>提交被修改(modified)文件和新文件(new)，不包括被删除(deleted)文件</p>\n</li>\n<li><p>git add -u =&gt; git add –update<br>提交被修改(modified)和被删除(deleted)文件，不包括新文件(new)</p>\n</li>\n<li><p>git add -A =&gt; git add –all<br>提交所有变化</p>\n</li>\n</ul>\n<h3 id=\"git使用说明\"><a href=\"#git使用说明\" class=\"headerlink\" title=\"git使用说明\"></a>git使用说明</h3><blockquote>\n<p>场景：新增功能，使用新的分支开发<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 在github或码云中，新建分支，输入新分支名称,如： index-swiper</span><br><span class=\"line\">2. 打开项目，cd至项目文件根目录</span><br><span class=\"line\">    git pull：拉分支代码至本地</span><br><span class=\"line\">3. 切换新的分支</span><br><span class=\"line\">    git checkout index-swiper</span><br><span class=\"line\">4. 新的分支上开发</span><br><span class=\"line\">5. 提交代码（本地index-swiper =&gt; 远程index-swiper）</span><br><span class=\"line\">    git add -A  提交在本地暂存空间</span><br><span class=\"line\">    git commit -m &apos;本次提交的说明&apos;</span><br><span class=\"line\">    git push    将本地分支代码提交至远程分支</span><br><span class=\"line\">6. 切换至本地的master分支</span><br><span class=\"line\">    git checkout master</span><br><span class=\"line\">7. 将线上的index-swiper分支内容与本地的master合并</span><br><span class=\"line\">    git merge origin/index-swiper</span><br><span class=\"line\">8. 将本地master的代码提交至远程master</span><br><span class=\"line\">    git push</span><br><span class=\"line\">9. 显示git的修改日志</span><br><span class=\"line\">    git log --pretty=oneline</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h3 id=\"删除git远程文件或者文件夹\"><a href=\"#删除git远程文件或者文件夹\" class=\"headerlink\" title=\"删除git远程文件或者文件夹\"></a>删除git远程文件或者文件夹</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 是否下载指定的分支，否则则是默认的master分支，如果没有设置setting的default分支</span><br><span class=\"line\">git clone git@github.com:RogueSword/RogueSword.github.io.git</span><br><span class=\"line\">git clone -b next git@github.com:RogueSword/RogueSword.github.io.git</span><br><span class=\"line\"></span><br><span class=\"line\">git rm theme/test.txt     // 删除一级目录下的test文件的\b操作</span><br><span class=\"line\">git rm -r theme              // 删除一级目录下的theme文件夹</span><br></pre></td></tr></table></figure>\n<h3 id=\"删除本地及远程分支\"><a href=\"#删除本地及远程分支\" class=\"headerlink\" title=\"删除本地及远程分支\"></a>删除本地及远程分支</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 删除远程分支</span><br><span class=\"line\">    git push origin :BranchName</span><br><span class=\"line\">    git push origin -D BranchName</span><br><span class=\"line\">2. 删除本地分支</span><br><span class=\"line\">    git branch -D BranchName</span><br></pre></td></tr></table></figure>\n<h3 id=\"git的几种撤销-git-push撤销\"><a href=\"#git的几种撤销-git-push撤销\" class=\"headerlink\" title=\"git的几种撤销+git push撤销\"></a>git的几种<a href=\"https://blog.csdn.net/kongbaidepao/article/details/52253774\" target=\"_blank\" rel=\"noopener\">撤销</a>+<a href=\"https://blog.csdn.net/hanchao5272/article/details/79435730\" target=\"_blank\" rel=\"noopener\">git push撤销</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. git add 的撤销</span><br><span class=\"line\">    git status 先看一下add 中的文件 </span><br><span class=\"line\">    git reset HEAD 如果后面什么都不跟的话 就是上一次add 里面的全部撤销了 </span><br><span class=\"line\">    git reset HEAD XXX/XXX/XXX.java 就是对某个文件进行撤销了</span><br><span class=\"line\">2. git commit 的撤销</span><br><span class=\"line\">    git log 查看节点</span><br><span class=\"line\">    git reset commit_id</span><br><span class=\"line\">3. git push的撤销</span><br><span class=\"line\">    git revert HEAD</span><br><span class=\"line\">    git revert HEAD 撤销前一次 commit </span><br><span class=\"line\">    git revert HEAD^ 撤销前前一次 commit</span><br><span class=\"line\"></span><br><span class=\"line\">    // 方法2</span><br><span class=\"line\">    \bgit log    // 查看提交信息，以便找到会退的版本号码</span><br><span class=\"line\">    git reset --soft 版本号  // 保留当前工作区，\b以便重新提交</span><br><span class=\"line\">              --hard 版本号  // 撤销相应工作区的修改</span><br><span class=\"line\">    git log    // 查看当前的提交信息，确认是否已经回退</span><br><span class=\"line\">    git push origin master –force   // 强制提交当前版本号，以达到撤销版本号的目的。必须添加参数force进行强制提交，否则会提交失败</span><br><span class=\"line\">    // 接着常规操作</span><br><span class=\"line\">    git add .</span><br><span class=\"line\">    git commit -m &apos;xxx&apos;</span><br><span class=\"line\">    git push origin xxx</span><br></pre></td></tr></table></figure>\n<h3 id=\"git-pull详细示例\"><a href=\"#git-pull详细示例\" class=\"headerlink\" title=\"git pull详细示例\"></a>git pull详细示例</h3><ul>\n<li>定义： 从另一个存储库或本地分支获取并集成（整合）。取回远程某个分支的更新，再与本地的指定分支合并</li>\n<li>语法：git pull [options] [<repository>[<refspec>…]]</refspec></repository></li>\n<li>白话：git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">示例：</span><br><span class=\"line\">1. 取回远程分支next，并与本地分支master合并</span><br><span class=\"line\">    git pull origin next:master</span><br><span class=\"line\">2. 取回远程分支next，并与本地当前的分支合并</span><br><span class=\"line\">    git pull origin next</span><br><span class=\"line\">2.1 拓展实质</span><br><span class=\"line\">    上述表示取回origin/next分支，再与当前分支合并。实质上等同于先做git fetch, 再执行git merge</span><br><span class=\"line\">    git fetch origin</span><br><span class=\"line\">    git merge origin/next</span><br><span class=\"line\"></span><br><span class=\"line\">3. 拓展：在git中，git会自动在本地分支和远程分支之间，建立一种追踪关系。比如，git clone的时候，所有本地的分支默认与远程主机的同名分支，建立追踪关系，即本地master分支，自动追踪远程origin/master分支</span><br><span class=\"line\">3.1 当然也可以手动建立追踪关系。指定本地master分支追踪远程origin/next分支</span><br><span class=\"line\">    git branch --set-upstream master origin/next</span><br><span class=\"line\">3.2 如果当前分支与远程分支存在追踪关系，git pull可以省略远程分支名</span><br><span class=\"line\">    git pull origin</span><br><span class=\"line\">3.3 如果当前分支只有一个追踪分支，可以省略主机名</span><br><span class=\"line\">    git pull</span><br></pre></td></tr></table></figure>\n<h2 id=\"快速上手\"><a href=\"#快速上手\" class=\"headerlink\" title=\"快速上手\"></a>快速上手</h2><h3 id=\"git初始化五连\"><a href=\"#git初始化五连\" class=\"headerlink\" title=\"git初始化五连\"></a>git初始化五连</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init (初始化本地仓库)</span><br><span class=\"line\">git add .  （将本地所有文件加到仓库里）</span><br><span class=\"line\">git commit -m &quot;message&quot; （设置提交信息）</span><br><span class=\"line\">git remote add origin git@github.com:sunningcarryhaha/flexSupplement.git（本地仓库链接远程仓库）</span><br><span class=\"line\"></span><br><span class=\"line\">git push -u origin master （push文件到仓库中）</span><br><span class=\"line\">git push --set-upstream origin master</span><br></pre></td></tr></table></figure>\n<h2 id=\"其他易错点\"><a href=\"#其他易错点\" class=\"headerlink\" title=\"其他易错点\"></a>其他易错点</h2><h3 id=\"git-pull-和-git-merge的区别\"><a href=\"#git-pull-和-git-merge的区别\" class=\"headerlink\" title=\"git pull 和 git merge的区别\"></a>git pull 和 git merge的区别</h3><ul>\n<li>git fetch 是指从远程获取最新版本到本地，不会自动合并</li>\n<li>在实际使用中，git fetch更安全一些，因为在merge前，我们可以查看更新情况，然后再决定是否合并。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">示例-写法1：</span><br><span class=\"line\">git fetch origin master             // 远程分支取回</span><br><span class=\"line\">git log -p master..origin/master    // 对比本地master与远程master区别</span><br><span class=\"line\">git merge origin/master             // 将fetch放在存储库里的内容与本地工作区合并</span><br></pre></td></tr></table></figure>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/modernizr/2.8.3/modernizr.min.js\" type=\"text/javascript\"></script>\n\n\n<h3 id=\"查看远程分支\"><a href=\"#查看远程分支\" class=\"headerlink\" title=\"查看远程分支\"></a>查看远程分支</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. git branch -r    // 查看当前远程分支</span><br><span class=\"line\">2. git branch -a    // 查看所有分支，远程及本地</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建-gitignore文件，忽略git不必要提交文件\"><a href=\"#创建-gitignore文件，忽略git不必要提交文件\" class=\"headerlink\" title=\"创建.gitignore文件，忽略git不必要提交文件\"></a>创建.gitignore文件，忽略git不必要提交文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch .gitignore    // 创建.gitignore文件</span><br><span class=\"line\">\b// 在文件录入：</span><br><span class=\"line\">.deploy_git/</span><br><span class=\"line\">node_modules/</span><br><span class=\"line\">public/</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>参考：</p>\n<ol>\n<li><a href=\"https://blog.csdn.net/superxlcr/article/details/51354257\" target=\"_blank\" rel=\"noopener\">Git-SSH文章链接</a></li>\n<li><a href=\"https://www.yiibai.com/git/git_pull.html\" target=\"_blank\" rel=\"noopener\">Git命令详解</a></li>\n</ol>\n</blockquote>\n"},{"title":"读书笔记《你不知道的Javascript》","copyright":true,"date":"2018-08-25T07:38:31.000Z","comments":1,"password":null,"_content":"![](http://p8sur5u78.bkt.clouddn.com/s28033372.jpg)\n\n> 去年的某时在群内听闻此书名，不以为然。想来也是和普通的书本无异，这段日子又在GitHub上面看到了开源文档，star数目不小。下载下来电子版，看了一小节原型链，不禁耳目一新，真可谓打通任督二脉。话不多说，立马当当下单开啃。在此记录下学习笔记，以供日后回读。\n\n## 语法新特性\n### Number.EPSILON（ES6） - 可接受的误差范围\nNumber.EPSILON是ES新特性，表示1和大于1的最小浮点数的差值，值为Math.pow(2, -52);可以用作测试值是否相等\n> 实例：验证0.1 + 0.2 = 0.3。\n\n- 说明：鉴于js遵循IEEE754规范，属于二进制浮点数的最大问题，就是0.1和0.2不够准确，相加之后会得到一个很接近的一个数字0.30000000000000004，因此判断会得到false\n\n- 解决：设置误差范围，即计算结果在误差范围内即可\n```javascript\nvar a = 0.1;\nvar b = 0.2;\nvar c = 0.3;\nvar isEqual = (a + b -c) < Number.EPSISON;\n```\n\n- ES5 - polyfill\n```js\nif (!Number.EPSILON) {\n  Number.EPSILON = Math.pow(2, -52);\n}\n```\n\n\n\n\n\n## 体系缺漏\n### 显示与隐式类型转换\n显示：String(...), Number(...), Booolean(...)这种不带new的是显示类型转换；一元运算符：+XX 和 !XX 也是显式转换（注意：!XX不仅转类型，且将其值的布尔类型值反转，因此 !!XX 是合理的显示）\n隐式： \n\n\n\n\n\n\n\n\n\n\n\n\n## 易错点\n### ~~和Math.floor()\n注意点：正数时候结果相同；但是负数时候则不同\n```js\n// 正数\nMath.floor(9.9);     // > 9\n~~9.9                // > 9\n\n// 负数\nMath.floor(-9.9);    // > -10\n~~-9.9               // -9 \n```\n\n###　[关于JSON.stringify()使用的注意事项](https://blog.csdn.net/pika_lzy/article/details/79212476)\n\n\n### parseInt\n语法：parseInt(string[, radix])，如果没有第二个参数，默认为10。**同时如果第一个参数不是字符串，则会将其转为字符串再做操作**\n```js\n// 示例1\nparseInt(new String(42));   // > 42, 将String对象拆封再将数字转为字符串，再做处理\n\n// 示例2\nvar a = {\n    num: 2,\n    toString () {\n        return String(this.num * 2);\n    }\n};\nparseInt(a);    // > 4\n```\n\n### [] + {}和{} + [] TODO: 《中》 5.1.3\n```js\n[] + {}   // > [object object]\n{} + []   // > 0\n```\n\n\n\n\n\n\n\n\n\n\n\n\n## 代码片段\n### ~和indexOf检查字段存在性\n- ~a按位非运算符: ~x 等同于 -(x+1)\n- indexOf语法： stringObject.indexOf(searchvalue[,fromindex])，如果没有第二个参数，则从0开始检测searchValue出现的位置(从0开始)，如未找到，则返回-1\n\n> 通常我们在检测字段时使用 >= 0 和 == -1 做判断，这样的写法不是很好，称为'抽象渗透'，意思是在代码中暴漏了底层的实现细节(见书本p61)\n\n- 解决：~(str.indexOf(target))作为判断的代码片段，当未检测到即返回的结果是-1时，~-1的结果为0，隐式转为布尔型，判断结果同为false\n```js\nvar str = 'hello world';\nvar target = 'roy';\nif (~str.indexOf(target)) {    // false\n  console.log('find it');\n}\n```\n\n\n","source":"_posts/读书笔记《你不知道的Javascript》(上).md","raw":"---\ntitle: 读书笔记《你不知道的Javascript》\ncopyright: true\ndate: 2018-08-25 15:38:31\ntags: ['笔记']\ncategories: \ncomments:\npassword:\n---\n![](http://p8sur5u78.bkt.clouddn.com/s28033372.jpg)\n\n> 去年的某时在群内听闻此书名，不以为然。想来也是和普通的书本无异，这段日子又在GitHub上面看到了开源文档，star数目不小。下载下来电子版，看了一小节原型链，不禁耳目一新，真可谓打通任督二脉。话不多说，立马当当下单开啃。在此记录下学习笔记，以供日后回读。\n\n## 语法新特性\n### Number.EPSILON（ES6） - 可接受的误差范围\nNumber.EPSILON是ES新特性，表示1和大于1的最小浮点数的差值，值为Math.pow(2, -52);可以用作测试值是否相等\n> 实例：验证0.1 + 0.2 = 0.3。\n\n- 说明：鉴于js遵循IEEE754规范，属于二进制浮点数的最大问题，就是0.1和0.2不够准确，相加之后会得到一个很接近的一个数字0.30000000000000004，因此判断会得到false\n\n- 解决：设置误差范围，即计算结果在误差范围内即可\n```javascript\nvar a = 0.1;\nvar b = 0.2;\nvar c = 0.3;\nvar isEqual = (a + b -c) < Number.EPSISON;\n```\n\n- ES5 - polyfill\n```js\nif (!Number.EPSILON) {\n  Number.EPSILON = Math.pow(2, -52);\n}\n```\n\n\n\n\n\n## 体系缺漏\n### 显示与隐式类型转换\n显示：String(...), Number(...), Booolean(...)这种不带new的是显示类型转换；一元运算符：+XX 和 !XX 也是显式转换（注意：!XX不仅转类型，且将其值的布尔类型值反转，因此 !!XX 是合理的显示）\n隐式： \n\n\n\n\n\n\n\n\n\n\n\n\n## 易错点\n### ~~和Math.floor()\n注意点：正数时候结果相同；但是负数时候则不同\n```js\n// 正数\nMath.floor(9.9);     // > 9\n~~9.9                // > 9\n\n// 负数\nMath.floor(-9.9);    // > -10\n~~-9.9               // -9 \n```\n\n###　[关于JSON.stringify()使用的注意事项](https://blog.csdn.net/pika_lzy/article/details/79212476)\n\n\n### parseInt\n语法：parseInt(string[, radix])，如果没有第二个参数，默认为10。**同时如果第一个参数不是字符串，则会将其转为字符串再做操作**\n```js\n// 示例1\nparseInt(new String(42));   // > 42, 将String对象拆封再将数字转为字符串，再做处理\n\n// 示例2\nvar a = {\n    num: 2,\n    toString () {\n        return String(this.num * 2);\n    }\n};\nparseInt(a);    // > 4\n```\n\n### [] + {}和{} + [] TODO: 《中》 5.1.3\n```js\n[] + {}   // > [object object]\n{} + []   // > 0\n```\n\n\n\n\n\n\n\n\n\n\n\n\n## 代码片段\n### ~和indexOf检查字段存在性\n- ~a按位非运算符: ~x 等同于 -(x+1)\n- indexOf语法： stringObject.indexOf(searchvalue[,fromindex])，如果没有第二个参数，则从0开始检测searchValue出现的位置(从0开始)，如未找到，则返回-1\n\n> 通常我们在检测字段时使用 >= 0 和 == -1 做判断，这样的写法不是很好，称为'抽象渗透'，意思是在代码中暴漏了底层的实现细节(见书本p61)\n\n- 解决：~(str.indexOf(target))作为判断的代码片段，当未检测到即返回的结果是-1时，~-1的结果为0，隐式转为布尔型，判断结果同为false\n```js\nvar str = 'hello world';\nvar target = 'roy';\nif (~str.indexOf(target)) {    // false\n  console.log('find it');\n}\n```\n\n\n","slug":"读书笔记《你不知道的Javascript》(上)","published":1,"updated":"2018-09-02T13:13:34.871Z","layout":"post","photos":[],"link":"","_id":"ck0qbmhfu0009uyfyu8oe0lp2","content":"<p><img src=\"http://p8sur5u78.bkt.clouddn.com/s28033372.jpg\" alt=\"\"></p>\n<blockquote>\n<p>去年的某时在群内听闻此书名，不以为然。想来也是和普通的书本无异，这段日子又在GitHub上面看到了开源文档，star数目不小。下载下来电子版，看了一小节原型链，不禁耳目一新，真可谓打通任督二脉。话不多说，立马当当下单开啃。在此记录下学习笔记，以供日后回读。</p>\n</blockquote>\n<h2 id=\"语法新特性\"><a href=\"#语法新特性\" class=\"headerlink\" title=\"语法新特性\"></a>语法新特性</h2><h3 id=\"Number-EPSILON（ES6）-可接受的误差范围\"><a href=\"#Number-EPSILON（ES6）-可接受的误差范围\" class=\"headerlink\" title=\"Number.EPSILON（ES6） - 可接受的误差范围\"></a>Number.EPSILON（ES6） - 可接受的误差范围</h3><p>Number.EPSILON是ES新特性，表示1和大于1的最小浮点数的差值，值为Math.pow(2, -52);可以用作测试值是否相等</p>\n<blockquote>\n<p>实例：验证0.1 + 0.2 = 0.3。</p>\n</blockquote>\n<ul>\n<li><p>说明：鉴于js遵循IEEE754规范，属于二进制浮点数的最大问题，就是0.1和0.2不够准确，相加之后会得到一个很接近的一个数字0.30000000000000004，因此判断会得到false</p>\n</li>\n<li><p>解决：设置误差范围，即计算结果在误差范围内即可</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">0.1</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">0.2</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"number\">0.3</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> isEqual = (a + b -c) &lt; <span class=\"built_in\">Number</span>.EPSISON;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>ES5 - polyfill</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"built_in\">Number</span>.EPSILON) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">Number</span>.EPSILON = <span class=\"built_in\">Math</span>.pow(<span class=\"number\">2</span>, <span class=\"number\">-52</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"体系缺漏\"><a href=\"#体系缺漏\" class=\"headerlink\" title=\"体系缺漏\"></a>体系缺漏</h2><h3 id=\"显示与隐式类型转换\"><a href=\"#显示与隐式类型转换\" class=\"headerlink\" title=\"显示与隐式类型转换\"></a>显示与隐式类型转换</h3><p>显示：String(…), Number(…), Booolean(…)这种不带new的是显示类型转换；一元运算符：+XX 和 !XX 也是显式转换（注意：!XX不仅转类型，且将其值的布尔类型值反转，因此 !!XX 是合理的显示）<br>隐式： </p>\n<h2 id=\"易错点\"><a href=\"#易错点\" class=\"headerlink\" title=\"易错点\"></a>易错点</h2><h3 id=\"和Math-floor\"><a href=\"#和Math-floor\" class=\"headerlink\" title=\"~~和Math.floor()\"></a>~~和Math.floor()</h3><p>注意点：正数时候结果相同；但是负数时候则不同<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正数</span></span><br><span class=\"line\"><span class=\"built_in\">Math</span>.floor(<span class=\"number\">9.9</span>);     <span class=\"comment\">// &gt; 9</span></span><br><span class=\"line\">~~<span class=\"number\">9.9</span>                <span class=\"comment\">// &gt; 9</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 负数</span></span><br><span class=\"line\"><span class=\"built_in\">Math</span>.floor(<span class=\"number\">-9.9</span>);    <span class=\"comment\">// &gt; -10</span></span><br><span class=\"line\">~~<span class=\"number\">-9.9</span>               <span class=\"comment\">// -9</span></span><br></pre></td></tr></table></figure></p>\n<p>###　<a href=\"https://blog.csdn.net/pika_lzy/article/details/79212476\" target=\"_blank\" rel=\"noopener\">关于JSON.stringify()使用的注意事项</a></p>\n<h3 id=\"parseInt\"><a href=\"#parseInt\" class=\"headerlink\" title=\"parseInt\"></a>parseInt</h3><p>语法：parseInt(string[, radix])，如果没有第二个参数，默认为10。<strong>同时如果第一个参数不是字符串，则会将其转为字符串再做操作</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 示例1</span></span><br><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"keyword\">new</span> <span class=\"built_in\">String</span>(<span class=\"number\">42</span>));   <span class=\"comment\">// &gt; 42, 将String对象拆封再将数字转为字符串，再做处理</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 示例2</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = &#123;</span><br><span class=\"line\">    num: <span class=\"number\">2</span>,</span><br><span class=\"line\">    toString () &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">String</span>(<span class=\"keyword\">this</span>.num * <span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">parseInt</span>(a);    <span class=\"comment\">// &gt; 4</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"和-TODO-《中》-5-1-3\"><a href=\"#和-TODO-《中》-5-1-3\" class=\"headerlink\" title=\"[] + {}和{} + [] TODO: 《中》 5.1.3\"></a>[] + {}和{} + [] TODO: 《中》 5.1.3</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[] + &#123;&#125;   <span class=\"comment\">// &gt; [object object]</span></span><br><span class=\"line\">&#123;&#125; + []   <span class=\"comment\">// &gt; 0</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"代码片段\"><a href=\"#代码片段\" class=\"headerlink\" title=\"代码片段\"></a>代码片段</h2><h3 id=\"和indexOf检查字段存在性\"><a href=\"#和indexOf检查字段存在性\" class=\"headerlink\" title=\"~和indexOf检查字段存在性\"></a>~和indexOf检查字段存在性</h3><ul>\n<li>~a按位非运算符: ~x 等同于 -(x+1)</li>\n<li>indexOf语法： stringObject.indexOf(searchvalue[,fromindex])，如果没有第二个参数，则从0开始检测searchValue出现的位置(从0开始)，如未找到，则返回-1</li>\n</ul>\n<blockquote>\n<p>通常我们在检测字段时使用 &gt;= 0 和 == -1 做判断，这样的写法不是很好，称为’抽象渗透’，意思是在代码中暴漏了底层的实现细节(见书本p61)</p>\n</blockquote>\n<ul>\n<li>解决：~(str.indexOf(target))作为判断的代码片段，当未检测到即返回的结果是-1时，~-1的结果为0，隐式转为布尔型，判断结果同为false<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">'hello world'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> target = <span class=\"string\">'roy'</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (~str.indexOf(target)) &#123;    <span class=\"comment\">// false</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'find it'</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://p8sur5u78.bkt.clouddn.com/s28033372.jpg\" alt=\"\"></p>\n<blockquote>\n<p>去年的某时在群内听闻此书名，不以为然。想来也是和普通的书本无异，这段日子又在GitHub上面看到了开源文档，star数目不小。下载下来电子版，看了一小节原型链，不禁耳目一新，真可谓打通任督二脉。话不多说，立马当当下单开啃。在此记录下学习笔记，以供日后回读。</p>\n</blockquote>\n<h2 id=\"语法新特性\"><a href=\"#语法新特性\" class=\"headerlink\" title=\"语法新特性\"></a>语法新特性</h2><h3 id=\"Number-EPSILON（ES6）-可接受的误差范围\"><a href=\"#Number-EPSILON（ES6）-可接受的误差范围\" class=\"headerlink\" title=\"Number.EPSILON（ES6） - 可接受的误差范围\"></a>Number.EPSILON（ES6） - 可接受的误差范围</h3><p>Number.EPSILON是ES新特性，表示1和大于1的最小浮点数的差值，值为Math.pow(2, -52);可以用作测试值是否相等</p>\n<blockquote>\n<p>实例：验证0.1 + 0.2 = 0.3。</p>\n</blockquote>\n<ul>\n<li><p>说明：鉴于js遵循IEEE754规范，属于二进制浮点数的最大问题，就是0.1和0.2不够准确，相加之后会得到一个很接近的一个数字0.30000000000000004，因此判断会得到false</p>\n</li>\n<li><p>解决：设置误差范围，即计算结果在误差范围内即可</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">0.1</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">0.2</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"number\">0.3</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> isEqual = (a + b -c) &lt; <span class=\"built_in\">Number</span>.EPSISON;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>ES5 - polyfill</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"built_in\">Number</span>.EPSILON) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">Number</span>.EPSILON = <span class=\"built_in\">Math</span>.pow(<span class=\"number\">2</span>, <span class=\"number\">-52</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"体系缺漏\"><a href=\"#体系缺漏\" class=\"headerlink\" title=\"体系缺漏\"></a>体系缺漏</h2><h3 id=\"显示与隐式类型转换\"><a href=\"#显示与隐式类型转换\" class=\"headerlink\" title=\"显示与隐式类型转换\"></a>显示与隐式类型转换</h3><p>显示：String(…), Number(…), Booolean(…)这种不带new的是显示类型转换；一元运算符：+XX 和 !XX 也是显式转换（注意：!XX不仅转类型，且将其值的布尔类型值反转，因此 !!XX 是合理的显示）<br>隐式： </p>\n<h2 id=\"易错点\"><a href=\"#易错点\" class=\"headerlink\" title=\"易错点\"></a>易错点</h2><h3 id=\"和Math-floor\"><a href=\"#和Math-floor\" class=\"headerlink\" title=\"~~和Math.floor()\"></a>~~和Math.floor()</h3><p>注意点：正数时候结果相同；但是负数时候则不同<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正数</span></span><br><span class=\"line\"><span class=\"built_in\">Math</span>.floor(<span class=\"number\">9.9</span>);     <span class=\"comment\">// &gt; 9</span></span><br><span class=\"line\">~~<span class=\"number\">9.9</span>                <span class=\"comment\">// &gt; 9</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 负数</span></span><br><span class=\"line\"><span class=\"built_in\">Math</span>.floor(<span class=\"number\">-9.9</span>);    <span class=\"comment\">// &gt; -10</span></span><br><span class=\"line\">~~<span class=\"number\">-9.9</span>               <span class=\"comment\">// -9</span></span><br></pre></td></tr></table></figure></p>\n<p>###　<a href=\"https://blog.csdn.net/pika_lzy/article/details/79212476\" target=\"_blank\" rel=\"noopener\">关于JSON.stringify()使用的注意事项</a></p>\n<h3 id=\"parseInt\"><a href=\"#parseInt\" class=\"headerlink\" title=\"parseInt\"></a>parseInt</h3><p>语法：parseInt(string[, radix])，如果没有第二个参数，默认为10。<strong>同时如果第一个参数不是字符串，则会将其转为字符串再做操作</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 示例1</span></span><br><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"keyword\">new</span> <span class=\"built_in\">String</span>(<span class=\"number\">42</span>));   <span class=\"comment\">// &gt; 42, 将String对象拆封再将数字转为字符串，再做处理</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 示例2</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = &#123;</span><br><span class=\"line\">    num: <span class=\"number\">2</span>,</span><br><span class=\"line\">    toString () &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">String</span>(<span class=\"keyword\">this</span>.num * <span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">parseInt</span>(a);    <span class=\"comment\">// &gt; 4</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"和-TODO-《中》-5-1-3\"><a href=\"#和-TODO-《中》-5-1-3\" class=\"headerlink\" title=\"[] + {}和{} + [] TODO: 《中》 5.1.3\"></a>[] + {}和{} + [] TODO: 《中》 5.1.3</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[] + &#123;&#125;   <span class=\"comment\">// &gt; [object object]</span></span><br><span class=\"line\">&#123;&#125; + []   <span class=\"comment\">// &gt; 0</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"代码片段\"><a href=\"#代码片段\" class=\"headerlink\" title=\"代码片段\"></a>代码片段</h2><h3 id=\"和indexOf检查字段存在性\"><a href=\"#和indexOf检查字段存在性\" class=\"headerlink\" title=\"~和indexOf检查字段存在性\"></a>~和indexOf检查字段存在性</h3><ul>\n<li>~a按位非运算符: ~x 等同于 -(x+1)</li>\n<li>indexOf语法： stringObject.indexOf(searchvalue[,fromindex])，如果没有第二个参数，则从0开始检测searchValue出现的位置(从0开始)，如未找到，则返回-1</li>\n</ul>\n<blockquote>\n<p>通常我们在检测字段时使用 &gt;= 0 和 == -1 做判断，这样的写法不是很好，称为’抽象渗透’，意思是在代码中暴漏了底层的实现细节(见书本p61)</p>\n</blockquote>\n<ul>\n<li>解决：~(str.indexOf(target))作为判断的代码片段，当未检测到即返回的结果是-1时，~-1的结果为0，隐式转为布尔型，判断结果同为false<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">'hello world'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> target = <span class=\"string\">'roy'</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (~str.indexOf(target)) &#123;    <span class=\"comment\">// false</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'find it'</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ck0qbmhfe0002uyfy11nj8r99","category_id":"ck0qbmhfl0006uyfypvrayqxq","_id":"ck0qbmhfz000cuyfy4tuxikxp"}],"PostTag":[{"post_id":"ck0qbmhfe0002uyfy11nj8r99","tag_id":"ck0qbmhfn0007uyfyq77gmlw7","_id":"ck0qbmhfx000buyfyi8scnm88"},{"post_id":"ck0qbmhfi0004uyfyvlwghx8y","tag_id":"ck0qbmhfw000auyfy60j71bxb","_id":"ck0qbmhfz000fuyfyxgm73iq0"},{"post_id":"ck0qbmhfi0004uyfyvlwghx8y","tag_id":"ck0qbmhfz000duyfybu8royhm","_id":"ck0qbmhg0000guyfy7okpu1l1"},{"post_id":"ck0qbmhfu0009uyfyu8oe0lp2","tag_id":"ck0qbmhfz000euyfyptpqsluh","_id":"ck0qbmhg0000huyfy29x07ltl"}],"Tag":[{"name":"hexo","_id":"ck0qbmhfn0007uyfyq77gmlw7"},{"name":"ES6","_id":"ck0qbmhfw000auyfy60j71bxb"},{"name":"模块化","_id":"ck0qbmhfz000duyfybu8royhm"},{"name":"笔记","_id":"ck0qbmhfz000euyfyptpqsluh"}]}}