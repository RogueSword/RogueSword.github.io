<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[git日常命令]]></title>
    <url>%2F2018%2F08%2F25%2Fgit%E6%97%A5%E5%B8%B8%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[Git提交代码常规Git add的几种区别 git add .提交被修改(modified)文件和新文件(new)，不包括被删除(deleted)文件 git add -u =&gt; git add –update提交被修改(modified)和被删除(deleted)文件，不包括新文件(new) git add -A =&gt; git add –all提交所有变化 git使用说明 场景：新增功能，使用新的分支开发1234567891011121314151617181920212223241. 在github或码云中，新建分支，输入新分支名称,如： index-swiper2. 打开项目，cd至项目文件根目录 git pull：拉分支代码至本地3. 切换新的分支 git checkout index-swiper4. 新的分支上开发5. 提交代码（本地index-swiper =&gt; 远程index-swiper） git add -A 提交在本地暂存空间 git commit -m &apos;本次提交的说明&apos; git push 将本地分支代码提交至远程分支6. 切换至本地的master分支 git checkout master7. 将线上的index-swiper分支内容与本地的master合并 git merge origin/index-swiper8. 将本地master的代码提交至远程master git push 9. 删除远程分支 git push origin :BranchName git push origin -D BranchName10. 删除本地分支 git branch -D BranchName11. 显示git的修改日志 git log --pretty=oneline git的几种撤销12345678910111. git add 的撤销 git status 先看一下add 中的文件 git reset HEAD 如果后面什么都不跟的话 就是上一次add 里面的全部撤销了 git reset HEAD XXX/XXX/XXX.java 就是对某个文件进行撤销了2. git commit 的撤销 git log 查看节点 git reset commit_id3. git push的撤销 git revert HEAD git revert HEAD 撤销前一次 commit git revert HEAD^ 撤销前前一次 commit git pull详细示例 定义： 从另一个存储库或本地分支获取并集成（整合）。取回远程某个分支的更新，再与本地的指定分支合并 语法：git pull [options] [[…]] 白话：git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt; 1234567891011121314151617示例：1. 取回远程分支next，并与本地分支master合并 git pull origin next:master2. 取回远程分支next，并与本地当前的分支合并 git pull origin next2.1 拓展实质 上述表示取回origin/next分支，再与当前分支合并。实质上等同于先做git fetch, 再执行git merge git fetch origin git merge origin/next3. 拓展：在git中，git会自动在本地分支和远程分支之间，建立一种追踪关系。比如，git clone的时候，所有本地的分支默认与远程主机的同名分支，建立追踪关系，即本地master分支，自动追踪远程origin/master分支3.1 当然也可以手动建立追踪关系。指定本地master分支追踪远程origin/next分支 git branch --set-upstream master origin/next3.2 如果当前分支与远程分支存在追踪关系，git pull可以省略远程分支名 git pull origin3.3 如果当前分支只有一个追踪分支，可以省略主机名 git pull 快速上手git初始化五连1234567git init (初始化本地仓库)git add . （将本地所有文件加到仓库里）git commit -m &quot;message&quot; （设置提交信息）git remote add origin git@github.com:sunningcarryhaha/flexSupplement.git（本地仓库链接远程仓库）git push -u origin master （push文件到仓库中）git push --set-upstream origin master 其他易错点git pull 和 git merge的区别 git fetch 是指从远程获取最新版本到本地，不会自动合并 在实际使用中，git fetch更安全一些，因为在merge前，我们可以查看更新情况，然后再决定是否合并。 1234示例-写法1：git fetch origin master // 远程分支取回git log -p master..origin/master // 对比本地master与远程master区别git merge origin/master // 将fetch放在存储库里的内容与本地工作区合并 查看远程分支121. git branch -r // 查看当前远程分支2. git branch -a // 查看所有分支，远程及本地 参考： Git-SSH文章链接 Git命令详解]]></content>
  </entry>
  <entry>
    <title><![CDATA[读书笔记《你不知道的Javascript》]]></title>
    <url>%2F2018%2F08%2F25%2F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E3%80%8A%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84Javascript%E3%80%8B(%E4%B8%8A)%2F</url>
    <content type="text"><![CDATA[去年的某时在群内听闻此书名，不以为然。想来也是和普通的书本无异，这段日子又在GitHub上面看到了开源文档，star数目不小。下载下来电子版，看了一小节原型链，不禁耳目一新，真可谓打通任督二脉。话不多说，立马当当下单开啃。在此记录下学习笔记，以供日后回读。 一、重点回顾 数组的排序方式 二、奇技淫巧三、个人笔记]]></content>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Frist Page]]></title>
    <url>%2F2018%2F05%2F18%2FFrist%20Page%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server more Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
